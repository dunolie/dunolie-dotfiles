Vimball: call delete('/Users/robbie/.vim/plugin/AlignPlugin.vim')|call delete('/Users/robbie/.vim/"\ Date:\ \ \ \ \ \ \ \ \ \ \ \ \ \ Mar\ 03,\ 2009')|call delete('/Users/robbie/.vim/"\ NOTE:\ the\ code\ herein\ needs\ vim\ 6.0\ or\ later')|call delete('/Users/robbie/.vim/"\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ needs\ <cecutil.vim>\ v5\ or\ later')|call delete('/Users/robbie/.vim/"\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Permission\ is\ hereby\ granted\ to\ use\ and\ distribute\ this\ code,')|call delete('/Users/robbie/.vim/"\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ notice\ is\ copied\ with\ it.\ Like\ anything\ else\ that's\ free,')|call delete('/Users/robbie/.vim/"\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ of\ any\ kind,\ either\ expressed\ or\ implied.\ By\ using\ this')|call delete('/Users/robbie/.vim/"\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ holder\ be\ liable\ for\ any\ damages\ resulting\ from\ the\ use')|call delete('/Users/robbie/.vim/"')|call delete('/Users/robbie/.vim/"\ Use\ 'a\ to\ mark\ beginning\ of\ to-be-aligned\ region,\ \ \ Alternative:\ \ use\ V')|call delete('/Users/robbie/.vim/"\ The\ maps\ also\ set\ up\ marks\ 'y\ and\ 'z,\ and\ retain\ \ \ \ mark\ region,\ execute\ same')|call delete('/Users/robbie/.vim/"')|call delete('/Users/robbie/.vim/"')|call delete('/Users/robbie/.vim/"\ actually\ they\ use\ <Leader>\ (:he\ mapleader),\ so\ the\ user\ can')|call delete('/Users/robbie/.vim/"')|call delete('/Users/robbie/.vim/"')|call delete('/Users/robbie/.vim/"\ Load\ Once:\ {{{1')|call delete('/Users/robbie/.vim/\ finish')|call delete('/Users/robbie/.vim/let\ s:keepcpo\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ =\ &cpo')|call delete('/Users/robbie/.vim/set\ cpo&vim')|call delete('/Users/robbie/.vim/"\ =====================================================================')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/"\ WS:\ wrapper\ start\ map\ (internal)\ \ {{{2')|call delete('/Users/robbie/.vim/if\ !hasmapto('<Plug>WrapperStart')')|call delete('/Users/robbie/.vim/endif')|call delete('/Users/robbie/.vim/vmap\ <silent>\ <script>\ <Plug>AlignMapsWrapperStart	:<c-u>set\ lz<CR>:call\ AlignMaps\#WrapperStart(1)<CR>')|call delete('/Users/robbie/.vim/"\ ---------------------------------------------------------------------')|call delete('/Users/robbie/.vim/"\ Removes\ guard\ lines,\ restores\ marks\ y\ and\ z,\ and\ restores\ search\ pattern')|call delete('/Users/robbie/.vim/\ nmap\ <unique>\ <SID>WE	<Plug>AlignMapsWrapperEnd')|call delete('/Users/robbie/.vim/nmap\ <silent>\ <script>\ <Plug>AlignMapsWrapperEnd	:call\ AlignMaps\#WrapperEnd()<CR>:set\ nolz<CR>')|call delete('/Users/robbie/.vim/"\ ---------------------------------------------------------------------')|call delete('/Users/robbie/.vim/if\ !hasmapto('<Plug>AM_a?')\ \ \ |map\ <unique>\ <Leader>a?		<Plug>AM_a?|endif')|call delete('/Users/robbie/.vim/if\ !hasmapto('<Plug>AM_a<')\ \ \ |map\ <unique>\ <Leader>a<		<Plug>AM_a<|endif')|call delete('/Users/robbie/.vim/if\ !hasmapto('<Plug>AM_a(')\ \ \ |map\ <unique>\ <Leader>a(		<Plug>AM_a(|endif')|call delete('/Users/robbie/.vim/if\ !hasmapto('<Plug>AM_acom')\ |map\ <unique>\ <Leader>acom	<Plug>AM_acom|endif')|call delete('/Users/robbie/.vim/if\ !hasmapto('<Plug>AM_aocom')|map\ <unique>\ <Leader>aocom	<Plug>AM_aocom|endif')|call delete('/Users/robbie/.vim/if\ !hasmapto('<Plug>AM_adec')\ |map\ <unique>\ <Leader>adec	<Plug>AM_adec|endif')|call delete('/Users/robbie/.vim/if\ !hasmapto('<Plug>AM_afnc')\ |map\ <unique>\ <Leader>afnc	<Plug>AM_afnc|endif')|call delete('/Users/robbie/.vim/if\ !hasmapto('<Plug>AM_aunum')|map\ <unique>\ <Leader>aunum	<Plug>AM_aenum|endif')|call delete('/Users/robbie/.vim/if\ exists("g:alignmaps_euronumber")\ &&\ !exists("g:alignmaps_usanumber")')|call delete('/Users/robbie/.vim/else')|call delete('/Users/robbie/.vim/endif')|call delete('/Users/robbie/.vim/map\ <silent>\ <script>\ <Plug>AM_a?		<SID>WS:AlignCtrl\ mIp1P1lC\ ?\ :\ :\ :\ :\ <CR>:'a,.Align<CR>:'a,'z-1s//(/s/+/)?\ /?/1/e<CR><SID>WE')|call delete('/Users/robbie/.vim/map\ <silent>\ <script>\ <Plug>AM_a<		<SID>WS:AlignCtrl\ mIp1P1=l\ <<\ >><CR>:'a,.Align<CR><SID>WE')|call delete('/Users/robbie/.vim/map\ <silent>\ <script>\ <Plug>AM_a=		<SID>WS:AlignCtrl\ mIp1P1=l<CR>:AlignCtrl\ g\ :=<CR>:'a,'zAlign\ :/==<CR><SID>WE')|call delete('/Users/robbie/.vim/map\ <silent>\ <script>\ <Plug>AM_acom		<SID>WS:'a,.s///[*/]///=/@&@/e<CR>:'a,.s//*///@&/e<CR>:'y,'zs/^/(\ */)\ @//1@/e<CR>'zk:call\ AlignMaps\#StdAlign(2)<CR>:'y,'zs/^/(/s*/)\ @//1/e<CR>:'y,'zs/\ @//eg<CR><SID>WE')|call delete('/Users/robbie/.vim/map\ <silent>\ <script>\ <Plug>AM_aocom	<SID>WS:AlignPush<CR>:AlignCtrl\ g\ /[*/]<CR>:exe\ "norm\ /<Plug>AM_acom"<cr>:AlignPop<CR><SID>WE')|call delete('/Users/robbie/.vim/map\ <silent>\ <script>\ <Plug>AM_adec		<SID>WS:'a,'zs//([^\ /t/(]/)/([*&]/)//1\ /2/e<CR>:'y,'zv/^///s//([^\ /t]/)/s/+//1\ /ge<CR>:'y,'zv/^/s*[*/]/s//([^/][*&]/)/s/+//1/ge<CR>:'y,'zv/^/s*[*/]/s/^/(/s*/\%(/K/k*/s/+/\%([a-zA-Z_*(&]/)/@=/)/+/)/([*(&]*/)/s*/([a-zA-Z0-9_()]/+/)/s*/(/(/[./{-}]/)*/)/s*/(=/)/=/s*/(./{-}/)/=/s*\;//1@/2\#@/3/4@/6@/7\;@/e<CR>:'y,'zv/^/s*[*/]/s//*///s*$/@*///e<CR>:'y,'zv/^/s*[*/]/s/^/s/+/*/@@@@@*\ /e<CR>:'y,'zv/^/s*[*/]/s/^@@@@@/*/(.*[^*/]/)$/&@*/e<CR>'yjma'zk:AlignCtrl\ v\ ^/s*[*/\#]<CR>:call\ AlignMaps\#StdAlign(1)<cr>:'y,'zv/^/s*[*/]/s/@\ //ge<CR>:'y,'zv/^/s*[*/]/s//(/s*/)\;/\;/1/e<CR>:'y,'zv/^\#/s/\#\ //e<CR>:'y,'zv/^/s/+[*/\#]/s//([^/*]/)/(/*/+/)/(\ /+/)//1/3/2/e<CR>:'y,'zv/^/s/+[*/\#]/s//((/+/)/(\ /+/)/*//2/1*/e<CR>:'y,'zv/^/s/+[*/\#]/s/^/(/s/+/)\ /*//1*/e<CR>:'y,'zv/^/s/+[*/\#]/s/[\ /t@]*$//e<CR>:'y,'zs/^[*]/\ */e<CR><SID>WE')|call delete('/Users/robbie/.vim/map\ <silent>\ <script>\ <Plug>AM_afnc		:<c-u>set\ lz<CR>:silent\ call\ AlignMaps\#Afnc()<CR>:set\ nolz<CR>')|call delete('/Users/robbie/.vim/map\ <silent>\ <script>\ <Plug>AM_aenum	<SID>WS:'a,'zs//\%([0-9.]/)/s/+/([-+]/=/d/)//1@/2/ge<CR>:'a,'zs//.@//.0@/ge<CR>:AlignCtrl\ wmp0P0r<CR>:'a,'zAlign\ [,@]<CR>:'a,'zs/@/\ /ge<CR>:'a,'zs//(,/)/(/s/+/)/([-0-9.,eE+]/+/)//1/3/2/ge<CR>:'a,'zs//([eE]/)/(/s/+/)/([0-9+/-+]/+/)//1/3/2/ge<CR><SID>WE')|call delete('/Users/robbie/.vim/"\ ---------------------------------------------------------------------')|call delete('/Users/robbie/.vim/if\ !hasmapto('<Plug>AM_Htd')|map\ <unique>\ <Leader>Htd	<Plug>AM_Htd|endif')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/"\ character-based\ right-justified\ alignment\ maps\ {{{2')|call delete('/Users/robbie/.vim/if\ !hasmapto('<Plug>AM_T\#')	\ |map\ <unique>\ <Leader>T\#		<Plug>AM_T\#|endif')|call delete('/Users/robbie/.vim/if\ !hasmapto('<Plug>AM_Ts,')\ |map\ <unique>\ <Leader>Ts,		<Plug>AM_Ts,|endif')|call delete('/Users/robbie/.vim/if\ !hasmapto('<Plug>AM_T\;')	\ |map\ <unique>\ <Leader>T\;		<Plug>AM_T\;|endif')|call delete('/Users/robbie/.vim/if\ !hasmapto('<Plug>AM_T=')	\ |map\ <unique>\ <Leader>T=		<Plug>AM_T=|endif')|call delete('/Users/robbie/.vim/if\ !hasmapto('<Plug>AM_T@')	\ |map\ <unique>\ <Leader>T@		<Plug>AM_T@|endif')|call delete('/Users/robbie/.vim/if\ !hasmapto('<Plug>AM_Tsp')\ |map\ <unique>\ <Leader>Tsp		<Plug>AM_Tsp|endif')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/map\ <silent>\ <script>\ <Plug>AM_T\#\ \ \ <SID>WS:AlignCtrl\ mIp0P0=r\ \#<CR>:'a,.Align<CR><SID>WE')|call delete('/Users/robbie/.vim/map\ <silent>\ <script>\ <Plug>AM_Ts,\ \ <SID>WS:AlignCtrl\ mIp0P1=r\ ,<CR>:'a,.Align<CR>:'a,.s//(/s*/),/,/1/ge<CR><SID>WE')|call delete('/Users/robbie/.vim/map\ <silent>\ <script>\ <Plug>AM_T\;\ \ \ <SID>WS:AlignCtrl\ mIp0P0=r\ \;<CR>:'a,.Align<CR><SID>WE')|call delete('/Users/robbie/.vim/map\ <silent>\ <script>\ <Plug>AM_T=\ \ \ <SID>WS:'a,'z-1s//s/+/([*/+/-\%<Bar>&/~^]/==/)/\ /1/e<CR>:'a,'z-1s@\ /+/([*/+/-\%<Bar>&/~^]/)=@/1=@ge<CR>:'a,'z-1s/\;\ */\;@/e<CR>:'a,'z-1s/==//="/<Char-0x0f>/<Char-0x0f>"/ge<CR>:'a,'z-1s/!=//x="!/<Char-0x0f>"/ge<CR>:AlignCtrl\ mIp1P1=r\ =\ @<CR>:AlignCtrl\ g\ =<CR>:'a,'z-1Align<CR>:'a,'z-1s/\;\ *@/\;/e<CR>:'a,'z-1s/\;\ *$/\;/e<CR>:'a,'z-1s@/([*/+/-\%<Bar>&/~^]/)/(\ /+/)=@/2/1=@ge<CR>:'a,'z-1s//(\ /+/)\;/\;/1/ge<CR>:'a,'z-1s//xff/=/ge<CR><SID>WE:exe\ "norm\ <Plug>acom"')|call delete('/Users/robbie/.vim/map\ <silent>\ <script>\ <Plug>AM_T@\ \ \ <SID>WS:AlignCtrl\ mIp0P0=r\ @<CR>:'a,.Align<CR><SID>WE')|call delete('/Users/robbie/.vim/map\ <silent>\ <script>\ <Plug>AM_Tsp\ \ <SID>WS:'a,.s/^/(/s*/)/(.*/)//=submatch(1).escape(substitute(submatch(2),'/s/+','@','g'),'/')/<CR>:AlignCtrl\ mI=r\ @<CR>:'a,.Align<CR>:'y+1,'z-1s/@/\ /g<CR><SID>WE')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/"\ character-based\ left-justified\ alignment\ maps\ {{{2')|call delete('/Users/robbie/.vim/if\ !hasmapto('<Plug>AM_t\#')		|map\ <unique>\ <Leader>t\#	<Plug>AM_t\#|endif')|call delete('/Users/robbie/.vim/if\ !hasmapto('<Plug>AM_t:')		|map\ <unique>\ <Leader>t:	<Plug>AM_t:|endif')|call delete('/Users/robbie/.vim/if\ !hasmapto('<Plug>AM_t<')		|map\ <unique>\ <Leader>t<	<Plug>AM_t<|endif')|call delete('/Users/robbie/.vim/if\ !hasmapto('<Plug>AM_ts,')	|map\ <unique>\ <Leader>ts,	<Plug>AM_ts,|endif')|call delete('/Users/robbie/.vim/if\ !hasmapto('<Plug>AM_ts\;')	|map\ <unique>\ <Leader>ts\;	<Plug>AM_ts\;|endif')|call delete('/Users/robbie/.vim/if\ !hasmapto('<Plug>AM_ts=')	|map\ <unique>\ <Leader>ts=	<Plug>AM_ts=|endif')|call delete('/Users/robbie/.vim/if\ !hasmapto('<Plug>AM_t?')		|map\ <unique>\ <Leader>t?	<Plug>AM_t?|endif')|call delete('/Users/robbie/.vim/if\ !hasmapto('<Plug>AM_t@')		|map\ <unique>\ <Leader>t@	<Plug>AM_t@|endif')|call delete('/Users/robbie/.vim/if\ !hasmapto('<Plug>AM_tab')	|map\ <unique>\ <Leader>tab	<Plug>AM_tab|endif')|call delete('/Users/robbie/.vim/if\ !hasmapto('<Plug>AM_tsp')	|map\ <unique>\ <Leader>tsp	<Plug>AM_tsp|endif')|call delete('/Users/robbie/.vim/if\ !hasmapto('<Plug>AM_tt')		|map\ <unique>\ <Leader>tt	<Plug>AM_tt|endif')|call delete('/Users/robbie/.vim/map\ <silent>\ <script>\ <Plug>AM_t|		<SID>WS:AlignCtrl\ mIp0P0=l\ <Bar><CR>:'a,.Align<CR><SID>WE')|call delete('/Users/robbie/.vim/map\ <silent>\ <script>\ <Plug>AM_t,		<SID>WS:AlignCtrl\ mIp0P1=l\ ,<CR>:'a,.Align<CR><SID>WE')|call delete('/Users/robbie/.vim/map\ <silent>\ <script>\ <Plug>AM_t\;		<SID>WS:AlignCtrl\ mIp0P1=l\ \;<CR>:'a,.Align<CR>:sil\ 'y,'zs//(\ */)\;/\;/1/ge<CR><SID>WE')|call delete('/Users/robbie/.vim/map\ <silent>\ <script>\ <Plug>AM_t=		<SID>WS:call\ AlignMaps\#Equals()<CR><SID>WE')|call delete('/Users/robbie/.vim/map\ <silent>\ <script>\ <Plug>AM_ts,		<SID>WS:AlignCtrl\ mIp0P1=l\ ,<CR>:'a,.Align<CR>:sil\ 'y+1,'z-1s//(/s*/),/,/1/ge<CR><SID>WE')|call delete('/Users/robbie/.vim/map\ <silent>\ <script>\ <Plug>AM_ts\;		<SID>WS:AlignCtrl\ mIp1P1=l\ \;<CR>:'a,.Align<CR>:sil\ 'y+1,'z-1s//(/s*/)\;/\;/1/ge<CR><SID>WE')|call delete('/Users/robbie/.vim/map\ <silent>\ <script>\ <Plug>AM_ts=		<SID>WS:AlignCtrl\ mIp1P1=l\ =<CR>:'a,.Align<CR>:sil\ 'y+1,'z-1s//(/s*/)=/=/1/ge<CR><SID>WE')|call delete('/Users/robbie/.vim/map\ <silent>\ <script>\ <Plug>AM_t?		<SID>WS:AlignCtrl\ mIp0P0=l\ ?<CR>:'a,.Align<CR>:.,'zs/\ /(\ */)\;/\;/1/ge<CR><SID>WE')|call delete('/Users/robbie/.vim/map\ <silent>\ <script>\ <Plug>AM_t@		<SID>WS::call\ AlignMaps\#StdAlign(1)<cr>:<SID>WE')|call delete('/Users/robbie/.vim/map\ <silent>\ <script>\ <Plug>AM_tab		<SID>WS:'a,.s/^/(/t*/)/(.*/)$//=submatch(1).escape(substitute(submatch(2),'/t',"/<Char-0x0f>",'g'),'/')/<CR>:if\ &ts\ ==\ 1<bar>exe\ "AlignCtrl\ mI=lp0P0\ /<Char-0x0f>"<bar>else<bar>exe\ "AlignCtrl\ mI=l\ /<Char-0x0f>"<bar>endif<CR>:'a,.Align<CR>:exe\ "'y+1,'z-1s//<Char-0x0f>/".((&ts\ ==\ 1)?\ '/t'\ :\ '\ ')."/g"<CR><SID>WE')|call delete('/Users/robbie/.vim/map\ <silent>\ <script>\ <Plug>AM_tsp		<SID>WS:'a,.s/^/(/s*/)/(.*/)//=submatch(1).escape(substitute(submatch(2),'/s/+','@','g'),'/')/<CR>:AlignCtrl\ mI=lp0P0\ @<CR>:'a,.Align<CR>:'y+1,'z-1s/@/\ /g<CR><SID>WE')|call delete('/Users/robbie/.vim/map\ <silent>\ <script>\ <Plug>AM_tt		<SID>WS:AlignCtrl\ mIp1P1=l\ ///@<!&\ ////<CR>:'a,.Align<CR><SID>WE')|call delete('/Users/robbie/.vim/"\ =====================================================================')|call delete('/Users/robbie/.vim/"\ \ \ ma\ ..move..\ use\ menu')|call delete('/Users/robbie/.vim/if\ has("menu")\ &&\ has("gui_running")\ &&\ &go\ =~\ 'm'\ &&\ !exists("s:firstmenu")')|call delete('/Users/robbie/.vim/\ if\ !exists("g:DrChipTopLvlMenu")')|call delete('/Users/robbie/.vim/\ endif')|call delete('/Users/robbie/.vim/\ \ let\ s:mapleader\ =\ exists("g:mapleader")?\ g:mapleader\ :\ '/'')|call delete('/Users/robbie/.vim/\ \ exe\ 'menu\ '.g:DrChipTopLvlMenu.'AlignMaps.<</\ and/\ >><tab>'.s:emapleader.'a<	'.s:mapleader.'a<'')|call delete('/Users/robbie/.vim/\ \ exe\ 'menu\ '.g:DrChipTopLvlMenu.'AlignMaps.Assignment/\ :=<tab>'.s:emapleader.'a=	'.s:mapleader.'a='')|call delete('/Users/robbie/.vim/\ \ exe\ 'menu\ '.g:DrChipTopLvlMenu.'AlignMaps.Breakup/\ Comma/\ Declarations<tab>'.s:emapleader.'a,	'.s:mapleader.'a,'')|call delete('/Users/robbie/.vim/\ \ exe\ 'menu\ '.g:DrChipTopLvlMenu.'AlignMaps.Commas<tab>'.s:emapleader.'t,	'.s:mapleader.'t,'')|call delete('/Users/robbie/.vim/\ \ exe\ 'menu\ '.g:DrChipTopLvlMenu.'AlignMaps.Commas/\ With/\ Strings<tab>'.s:emapleader.'tsq	'.s:mapleader.'tsq'')|call delete('/Users/robbie/.vim/\ \ exe\ 'menu\ '.g:DrChipTopLvlMenu.'AlignMaps.Comments/\ Only<tab>'.s:emapleader.'aocom	'.s:mapleader.'aocom'')|call delete('/Users/robbie/.vim/\ \ exe\ 'menu\ '.g:DrChipTopLvlMenu.'AlignMaps.Declarations<tab>'.s:emapleader.'adec	'.s:mapleader.'adec'')|call delete('/Users/robbie/.vim/\ \ exe\ 'menu\ '.g:DrChipTopLvlMenu.'AlignMaps.Function/\ Header<tab>'.s:emapleader.'afnc	'.s:mapleader.'afnc'')|call delete('/Users/robbie/.vim/\ \ exe\ 'menu\ '.g:DrChipTopLvlMenu.'AlignMaps.(/././.)?/./././\ :/\ /././.<tab>'.s:emapleader.'a?	'.s:mapleader.'a?'')|call delete('/Users/robbie/.vim/\ \ exe\ 'menu\ '.g:DrChipTopLvlMenu.'AlignMaps.Numbers/\ (American-Style)<tab>'.s:emapleader.'aunum	<Leader>aunum	'.s:mapleader.'aunum	<Leader>aunum'')|call delete('/Users/robbie/.vim/\ \ exe\ 'menu\ '.g:DrChipTopLvlMenu.'AlignMaps.Spaces/\ (Left/\ Justified)<tab>'.s:emapleader.'tsp	'.s:mapleader.'tsp'')|call delete('/Users/robbie/.vim/\ \ exe\ 'menu\ '.g:DrChipTopLvlMenu.'AlignMaps.Statements/\ With/\ Percent/\ Style/\ Comments<tab>'.s:emapleader.'m=	'.s:mapleader.'m='')|call delete('/Users/robbie/.vim/\ \ exe\ 'menu\ '.g:DrChipTopLvlMenu.'AlignMaps.Symbol/\ /|<tab>'.s:emapleader.'t/|	'.s:mapleader.'t|'')|call delete('/Users/robbie/.vim/\ \ exe\ 'menu\ '.g:DrChipTopLvlMenu.'AlignMaps.Symbol/\ \#<tab>'.s:emapleader.'t\#	'.s:mapleader.'t\#'')|call delete('/Users/robbie/.vim/\ \ unlet\ s:mapleader')|call delete('/Users/robbie/.vim/\ endif')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/"\ \ Restore:\ {{{1')|call delete('/Users/robbie/.vim/unlet\ s:keepcpo')|call delete('/Users/robbie/.vim/"\ ==============================================================================')|call delete('/Users/robbie/.vim/"\ vim:\ ts=4\ nowrap\ fdm=marker')|call delete('/Users/robbie/.vim/510')|call delete('/Users/robbie/.vim/"\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ save/restore\ mark\ position')|call delete('/Users/robbie/.vim/"\ \ Author:	Charles\ E.\ Campbell,\ Jr.')|call delete('/Users/robbie/.vim/"\ \ Date:	Aug\ 27,\ 2008')|call delete('/Users/robbie/.vim/"\ \ Saving\ Restoring\ Destroying\ Marks:\ {{{1')|call delete('/Users/robbie/.vim/"\ \ \ \ \ \ \ call\ RestoreMark(markname)\ \ \ \ call\ RestoreMark(savemark)')|call delete('/Users/robbie/.vim/"\ \ \ \ \ \ \ commands:\ SM\ RM\ DM')|call delete('/Users/robbie/.vim/"\ \ Saving\ Restoring\ Destroying\ Window\ Position:\ {{{1')|call delete('/Users/robbie/.vim/"\ \ \ \ \ \ \ call\ RestoreWinPosn()\ \ \ \ \ call\ RestoreWinPosn(winposn)')|call delete('/Users/robbie/.vim/"		/rwp\ :\ restore\ current\ window/buffer's\ previous\ position')|call delete('/Users/robbie/.vim/"')|call delete('/Users/robbie/.vim/"\ \ \ \ \ \ \ call\ SaveUserMaps(mapmode,maplead,mapchx,suffix)')|call delete('/Users/robbie/.vim/"')|call delete('/Users/robbie/.vim/"')|call delete('/Users/robbie/.vim/"\ believe,\ and\ shudder.\ But\ do\ you\ want\ to\ know,\ vain\ man,\ that')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/"\ Load\ Once:\ {{{1')|call delete('/Users/robbie/.vim/\ finish')|call delete('/Users/robbie/.vim/let\ g:loaded_cecutil\ =\ "v18b"')|call delete('/Users/robbie/.vim/set\ cpo&vim')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/"\ \ Public\ Interface:\ {{{1')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/"\ \ Map\ Interface:\ {{{2')|call delete('/Users/robbie/.vim/\ map\ <unique>\ <Leader>swp\ <Plug>SaveWinPosn')|call delete('/Users/robbie/.vim/if\ !hasmapto('<Plug>RestoreWinPosn')')|call delete('/Users/robbie/.vim/endif')|call delete('/Users/robbie/.vim/nmap\ <silent>\ <Plug>RestoreWinPosn	:call\ RestoreWinPosn()<CR>')|call delete('/Users/robbie/.vim/"\ ---------------------------------------------------------------------')|call delete('/Users/robbie/.vim/com!\ -bar\ -nargs=0\ SWP	call\ SaveWinPosn()')|call delete('/Users/robbie/.vim/com!\ -bar\ -nargs=1\ SM	call\ SaveMark(<q-args>)')|call delete('/Users/robbie/.vim/com!\ -bar\ -nargs=1\ DM	call\ DestroyMark(<q-args>)')|call delete('/Users/robbie/.vim/if\ v:version\ <\ 630')|call delete('/Users/robbie/.vim/else')|call delete('/Users/robbie/.vim/endif')|call delete('/Users/robbie/.vim/"\ ===============')|call delete('/Users/robbie/.vim/"\ ===============')|call delete('/Users/robbie/.vim/"\ ---------------------------------------------------------------------')|call delete('/Users/robbie/.vim/"\ \ \ \ let\ winposn=\ SaveWinPosn()\ \ will\ save\ window\ position\ in\ winposn\ variable')|call delete('/Users/robbie/.vim/"\ \ \ \ let\ winposn=\ SaveWinPosn(0)\ will\ *only*\ save\ window\ position\ in\ winposn\ variable\ (no\ stacking\ done)')|call delete('/Users/robbie/.vim/"\ \ call\ Dfunc("SaveWinPosn()\ a:0=".a:0)')|call delete('/Users/robbie/.vim/"\ \ \ call\ Dfunc("SaveWinPosn\ :\ empty\ buffer")')|call delete('/Users/robbie/.vim/\ \ endif')|call delete('/Users/robbie/.vim/\ \ let\ siso_keep\ =\ &siso')|call delete('/Users/robbie/.vim/\ \ setlocal\ so=0\ siso=0\ ss=0')|call delete('/Users/robbie/.vim/\ \ let\ swline\ \ \ \ =\ line(".")')|call delete('/Users/robbie/.vim/\ \ let\ swwline\ \ \ =\ winline()\ -\ 1')|call delete('/Users/robbie/.vim/\ \ let\ savedposn\ =\ "call\ GoWinbufnr(".winbufnr(0).")|silent\ ".swline')|call delete('/Users/robbie/.vim/\ \ if\ swwline\ >\ 0')|call delete('/Users/robbie/.vim/\ \ endif')|call delete('/Users/robbie/.vim/\ \ \ let\ savedposn=\ savedposn.":".s:modifier."norm!\ 0".swwcol."zl/<cr>"')|call delete('/Users/robbie/.vim/\ \ let\ savedposn\ =\ savedposn.":".s:modifier."call\ cursor(".swline.",".swcol.")/<cr>"')|call delete('/Users/robbie/.vim/\ \ "\ save\ window\ position\ in')|call delete('/Users/robbie/.vim/\ \ "\ only\ when\ SaveWinPosn()\ is\ used')|call delete('/Users/robbie/.vim/\ \ \ if\ !exists("b:cecutil_iwinposn")')|call delete('/Users/robbie/.vim/\ \ \ else')|call delete('/Users/robbie/.vim/\ \ \ endif')|call delete('/Users/robbie/.vim/\ \ \ let\ b:cecutil_winposn{b:cecutil_iwinposn}=\ savedposn')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/\ \ let\ &siso\ =\ siso_keep')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/"\ \ \ call\ Decho("b:cecutil_winpos{".b:cecutil_iwinposn."}[".b:cecutil_winposn{b:cecutil_iwinposn}."]")')|call delete('/Users/robbie/.vim/"\ \ \ call\ Decho("b:cecutil_iwinposn\ doesn't\ exist")')|call delete('/Users/robbie/.vim/"\ \ call\ Dret("SaveWinPosn\ [".savedposn."]")')|call delete('/Users/robbie/.vim/endfun')|call delete('/Users/robbie/.vim/"\ ---------------------------------------------------------------------')|call delete('/Users/robbie/.vim/"\ \ \ \ \ \ call\ RestoreWinPosn()')|call delete('/Users/robbie/.vim/fun!\ RestoreWinPosn(...)')|call delete('/Users/robbie/.vim/"\ \ call\ Decho("getline(1)<".getline(1).">")')|call delete('/Users/robbie/.vim/\ \ if\ line(".")\ ==\ 1\ &&\ getline(1)\ ==\ ""')|call delete('/Users/robbie/.vim/\ \ \ return\ ""')|call delete('/Users/robbie/.vim/\ \ let\ so_keep\ \ \ =\ &l:so')|call delete('/Users/robbie/.vim/\ \ let\ ss_keep\ \ \ =\ &l:ss')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/\ \ \ "\ use\ saved\ window\ position\ in\ b:cecutil_winposn{b:cecutil_iwinposn}\ if\ it\ exists')|call delete('/Users/robbie/.vim/"\ \ \ 	call\ Decho("using\ stack\ b:cecutil_winposn{".b:cecutil_iwinposn."}<".b:cecutil_winposn{b:cecutil_iwinposn}.">")')|call delete('/Users/robbie/.vim/\ \ \ \ \ exe\ "silent!\ ".b:cecutil_winposn{b:cecutil_iwinposn}')|call delete('/Users/robbie/.vim/	\ "\ ignore\ empty\ buffer\ error\ messages')|call delete('/Users/robbie/.vim/\ \ \ \ "\ normally\ drop\ top-of-stack\ by\ one')|call delete('/Users/robbie/.vim/\ \ \ \ "\ drop\ top-of-stack\ index\ by\ one\ again')|call delete('/Users/robbie/.vim/	\ unlet\ b:cecutil_winposn{b:cecutil_iwinposn}')|call delete('/Users/robbie/.vim/	\ while\ b:cecutil_iwinposn\ >=\ 1\ &&\ !exists("b:cecutil_winposn{b:cecutil_iwinposn}")')|call delete('/Users/robbie/.vim/	\ endwhile')|call delete('/Users/robbie/.vim/	\ \ unlet\ b:cecutil_iwinposn')|call delete('/Users/robbie/.vim/	endif')|call delete('/Users/robbie/.vim/\ \ \ 	echohl\ WarningMsg')|call delete('/Users/robbie/.vim/	echohl\ None')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/"\ \ \ call\ Decho("using\ input\ a:1<".a:1.">")')|call delete('/Users/robbie/.vim/\ \ \ exe\ "silent\ ".a:1')|call delete('/Users/robbie/.vim/\ \ \ if\ exists("b:cecutil_iwinposn")')|call delete('/Users/robbie/.vim/\ \ \ \ while\ jwinposn\ >=\ 1\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ "\ search\ for\ a:1\ in\ iwinposn..1')|call delete('/Users/robbie/.vim/\ \ \ \ \ \ \ \ \ if\ a:1\ ==\ b:cecutil_winposn{jwinposn}\ \ \ \ \ \ "\ and\ the\ pattern\ matches')|call delete('/Users/robbie/.vim/\ \ \ \ \ \ \ if\ jwinposn\ ==\ b:cecutil_iwinposn\ \ \ \ \ \ \ \ \ \ \ \ "\ if\ at\ top-of-stack')|call delete('/Users/robbie/.vim/\ \ \ \ \ \ \ endif')|call delete('/Users/robbie/.vim/\ \ \ \ \ endif')|call delete('/Users/robbie/.vim/\ \ \ \ endwhile')|call delete('/Users/robbie/.vim/\ \ endif')|call delete('/Users/robbie/.vim/\ \ "\ Seems\ to\ be\ something\ odd:\ vertical\ motions\ after\ RWP')|call delete('/Users/robbie/.vim/\ \ "\ Note:\ was\ using\ wincol()>1,\ but\ with\ signs,\ a\ cursor')|call delete('/Users/robbie/.vim/\ \ if\ virtcol('.')\ >\ 1')|call delete('/Users/robbie/.vim/\ \ elseif\ virtcol(".")\ <\ virtcol("$")')|call delete('/Users/robbie/.vim/\ \ endif')|call delete('/Users/robbie/.vim/\ \ let\ &l:so\ \ \ =\ so_keep')|call delete('/Users/robbie/.vim/\ \ let\ &l:ss\ \ \ =\ ss_keep')|call delete('/Users/robbie/.vim/"\ \ call\ Dret("RestoreWinPosn")')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/"\ GoWinbufnr:\ go\ to\ window\ holding\ given\ buffer\ (by\ number)\ {{{2')|call delete('/Users/robbie/.vim/"\ \ \ then\ will\ try\ from\ topleft\ to\ bottom\ right')|call delete('/Users/robbie/.vim/"\ \ call\ Dfunc("GoWinbufnr(".a:bufnum.")")')|call delete('/Users/robbie/.vim/"\ \ \ call\ Dret("GoWinbufnr\ :\ winbufnr(0)==a:bufnum")')|call delete('/Users/robbie/.vim/\ \ endif')|call delete('/Users/robbie/.vim/\ \ let\ first=1')|call delete('/Users/robbie/.vim/\ \ 	winc\ w')|call delete('/Users/robbie/.vim/\ \ \ endwhile')|call delete('/Users/robbie/.vim/endfun')|call delete('/Users/robbie/.vim/"\ ---------------------------------------------------------------------')|call delete('/Users/robbie/.vim/"\ \ \ \ \ \ \ \ \ \ \ For\ example,\ SaveMark("a")')|call delete('/Users/robbie/.vim/fun!\ SaveMark(markname)')|call delete('/Users/robbie/.vim/\ \ let\ markname=\ a:markname')|call delete('/Users/robbie/.vim/\ \ \ let\ markname=\ strpart(markname,1,1)')|call delete('/Users/robbie/.vim/"\ \ call\ Decho("markname=".markname)')|call delete('/Users/robbie/.vim/\ \ let\ lzkeep\ \ =\ &lz')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/\ \ \ let\ winposn\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ =\ SaveWinPosn(0)')|call delete('/Users/robbie/.vim/\ \ \ let\ savemark\ \ \ \ \ \ \ \ \ \ \ \ \ \ =\ SaveWinPosn(0)')|call delete('/Users/robbie/.vim/\ \ \ let\ savemark\ \ \ \ \ \ \ \ \ \ \ \ \ \ =\ markname.savemark')|call delete('/Users/robbie/.vim/\ \ else')|call delete('/Users/robbie/.vim/\ \ \ let\ savemark\ \ \ \ \ \ \ \ \ \ \ \ \ \ =\ ""')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/\ \ return\ savemark')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/"\ RestoreMark:\ {{{2')|call delete('/Users/robbie/.vim/fun!\ RestoreMark(markname)')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/"\ \ \ call\ Dret("RestoreMark\ :\ no\ such\ mark")')|call delete('/Users/robbie/.vim/\ \ endif')|call delete('/Users/robbie/.vim/\ \ if\ markname\ !~\ '/a'')|call delete('/Users/robbie/.vim/\ \ \ let\ markname=\ strpart(a:markname,1,1)')|call delete('/Users/robbie/.vim/"\ \ call\ Decho("markname=".markname."\ strlen(a:markname)=".strlen(a:markname))')|call delete('/Users/robbie/.vim/\ \ let\ lzkeep\ \ =\ &lz')|call delete('/Users/robbie/.vim/\ \ let\ winposn\ =\ SaveWinPosn(0)')|call delete('/Users/robbie/.vim/\ \ if\ strlen(a:markname)\ <=\ 2')|call delete('/Users/robbie/.vim/	"\ use\ global\ variable\ g:savemark_{markname}')|call delete('/Users/robbie/.vim/	call\ RestoreWinPosn(g:savemark_{markname})')|call delete('/Users/robbie/.vim/\ \ \ endif')|call delete('/Users/robbie/.vim/\ \ \ "\ markname\ is\ a\ savemark\ command\ (string)')|call delete('/Users/robbie/.vim/\ \ \ let\ markcmd=\ strpart(a:markname,1)')|call delete('/Users/robbie/.vim/\ \ \ exe\ "norm!\ m".markname')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/\ \ let\ &lz\ \ \ \ \ \ \ =\ lzkeep')|call delete('/Users/robbie/.vim/"\ \ call\ Dret("RestoreMark")')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/"\ DestroyMark:\ {{{2')|call delete('/Users/robbie/.vim/fun!\ DestroyMark(markname)')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/\ \ let\ reportkeep=\ &report')|call delete('/Users/robbie/.vim/\ \ set\ lz\ report=10000')|call delete('/Users/robbie/.vim/\ \ let\ markname=\ strpart(a:markname,0,1)')|call delete('/Users/robbie/.vim/\ \ \ "\ handles\ 'a\ ->\ a\ styles')|call delete('/Users/robbie/.vim/\ \ endif')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/\ \ let\ winposn\ =\ SaveWinPosn(0)')|call delete('/Users/robbie/.vim/\ \ let\ lineone\ =\ getline(".")')|call delete('/Users/robbie/.vim/\ \ d')|call delete('/Users/robbie/.vim/\ \ let\ &mod\ \ \ \ =\ curmod')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/\ \ let\ &report\ =\ reportkeep')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/endfun')|call delete('/Users/robbie/.vim/"\ ---------------------------------------------------------------------')|call delete('/Users/robbie/.vim/"\ However,\ <q-args>\ doesn't\ split\ at\ all,\ so\ this\ one\ returns\ a\ list')|call delete('/Users/robbie/.vim/"\ The\ resulting\ list:\ \ qarglist[0]\ corresponds\ to\ a:0')|call delete('/Users/robbie/.vim/fun!\ QArgSplitter(qarg)')|call delete('/Users/robbie/.vim/\ \ let\ qarglist\ \ \ \ =\ split(a:qarg)')|call delete('/Users/robbie/.vim/\ \ let\ qarglist\ \ \ \ =\ insert(qarglist,qarglistlen)')|call delete('/Users/robbie/.vim/\ \ return\ qarglist')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/"\ ListWinPosn:\ {{{2')|call delete('/Users/robbie/.vim/"\ \ if\ !exists("b:cecutil_iwinposn")\ ||\ b:cecutil_iwinposn\ ==\ 0\ \ \ \ \ \ \ \ \ \ \ \ \ "\ Decho\ ')|call delete('/Users/robbie/.vim/"\ \ else\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ "\ Decho')|call delete('/Users/robbie/.vim/"\ \ \ while\ jwinposn\ >=\ 1\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ "\ Decho\ ')|call delete('/Users/robbie/.vim/"\ \ \ \ \ call\ Decho("winposn{".jwinposn."}<".b:cecutil_winposn{jwinposn}.">")\ "\ Decho\ ')|call delete('/Users/robbie/.vim/"\ \ \ \ \ call\ Decho("winposn{".jwinposn."}\ --\ doesn't\ exist")\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ "\ Decho\ ')|call delete('/Users/robbie/.vim/"\ \ \ \ let\ jwinposn=\ jwinposn\ -\ 1\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ "\ Decho\ ')|call delete('/Users/robbie/.vim/"\ \ endif\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ "\ Decho')|call delete('/Users/robbie/.vim/"com!\ -nargs=0\ LWP	call\ ListWinPosn()\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ "\ Decho\ ')|call delete('/Users/robbie/.vim/"\ ---------------------------------------------------------------------')|call delete('/Users/robbie/.vim/"\ \ \ \ \ \ \ \ \ \ which\ can\ be\ used\ to\ restore\ user\ maps\ later\ with')|call delete('/Users/robbie/.vim/"')|call delete('/Users/robbie/.vim/"\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ ex.\ "n"\ =\ Normal')|call delete('/Users/robbie/.vim/"\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ The\ "u"\ means\ that\ the\ map\ will\ also\ be\ unmapped')|call delete('/Users/robbie/.vim/"\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ ex.\ "un"\ \ =\ Normal\ +\ unmapping')|call delete('/Users/robbie/.vim/"\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ ex.\ "bun"\ =\ Normal\ +\ <buffer>\ +\ unmapping')|call delete('/Users/robbie/.vim/"\ \ \ \ \ \ \ \ \ \ maplead\ -\ see\ mapchx')|call delete('/Users/robbie/.vim/"\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ ex.\ "<left>"')|call delete('/Users/robbie/.vim/"\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ multiple\ two-letter\ maps\ (using\ the\ maplead:')|call delete('/Users/robbie/.vim/"\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ ex.\ maplead="/"\ and\ mapchx="abc"\ saves\ user\ mappings\ for')|call delete('/Users/robbie/.vim/"\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Of\ course,\ if\ maplead\ is\ "",\ then\ for\ mapchx="abc",')|call delete('/Users/robbie/.vim/"\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ -\ :something\ \ handled\ as\ a\ single\ map\ item,\ w/o\ the\ ":"')|call delete('/Users/robbie/.vim/"\ \ \ \ \ \ \ \ \ \ suffix\ \ -\ a\ string\ unique\ to\ your\ plugin')|call delete('/Users/robbie/.vim/fun!\ SaveUserMaps(mapmode,maplead,mapchx,suffix)')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/\ \ \ "\ initialize\ restoremap_suffix\ to\ null\ string')|call delete('/Users/robbie/.vim/\ \ endif')|call delete('/Users/robbie/.vim/\ \ "\ set\ up\ dounmap:\ if\ 1,\ then\ save\ and\ unmap\ \ (a:mapmode\ leads\ with\ a\ "u")')|call delete('/Users/robbie/.vim/\ \ let\ mapmode\ \ =\ a:mapmode')|call delete('/Users/robbie/.vim/\ \ let\ dobuffer\ =\ ""')|call delete('/Users/robbie/.vim/\ \ \ if\ \ \ \ \ mapmode\ =~\ '^u'')|call delete('/Users/robbie/.vim/\ \ \ \ let\ mapmode=\ strpart(a:mapmode,1)')|call delete('/Users/robbie/.vim/\ \ \ \ let\ dobuffer=\ "<buffer>\ "')|call delete('/Users/robbie/.vim/\ \ \ endif')|call delete('/Users/robbie/.vim/"\ \ call\ Decho("dounmap=".dounmap."\ \ dobuffer<".dobuffer.">")')|call delete('/Users/robbie/.vim/\ \ "\ save\ single\ map\ :...something...')|call delete('/Users/robbie/.vim/"\ \ \ call\ Decho("save\ single\ map\ :...something...")')|call delete('/Users/robbie/.vim/\ \ \ if\ amap\ ==\ "|"\ ||\ amap\ ==\ "/<c-v>"')|call delete('/Users/robbie/.vim/\ \ \ endif')|call delete('/Users/robbie/.vim/\ \ \ let\ s:restoremap_{a:suffix}\ =\ s:restoremap_{a:suffix}."|:silent!\ ".mapmode."unmap\ ".dobuffer.amap')|call delete('/Users/robbie/.vim/\ \ \ \ let\ maprhs\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ =\ substitute(maparg(amap,mapmode),'|','<bar>','ge')')|call delete('/Users/robbie/.vim/\ \ \ endif')|call delete('/Users/robbie/.vim/	exe\ "silent!\ ".mapmode."unmap\ ".dobuffer.amap')|call delete('/Users/robbie/.vim/\ ')|call delete('/Users/robbie/.vim/\ \ elseif\ strpart(a:mapchx,0,1)\ ==\ '<'')|call delete('/Users/robbie/.vim/\ \ \ let\ amap\ \ \ \ \ \ \ =\ a:mapchx')|call delete('/Users/robbie/.vim/\ \ \ \ let\ amap=\ "/<c-v>".amap')|call delete('/Users/robbie/.vim/\ \ \ endif')|call delete('/Users/robbie/.vim/\ \ \ if\ maparg(a:mapchx,mapmode)\ !=\ ""')|call delete('/Users/robbie/.vim/	let\ s:restoremap_{a:suffix}\ =\ s:restoremap_{a:suffix}."|".mapmode."map\ ".amap."\ ".dobuffer.maprhs')|call delete('/Users/robbie/.vim/\ \ \ if\ dounmap')|call delete('/Users/robbie/.vim/\ \ \ endif')|call delete('/Users/robbie/.vim/\ \ "\ save\ multiple\ maps')|call delete('/Users/robbie/.vim/"\ \ \ call\ Decho("save\ multiple\ maps")')|call delete('/Users/robbie/.vim/\ \ \ while\ i\ <=\ strlen(a:mapchx)')|call delete('/Users/robbie/.vim/	if\ amap\ ==\ "|"\ ||\ amap\ ==\ "/<c-v>"')|call delete('/Users/robbie/.vim/	endif')|call delete('/Users/robbie/.vim/\ \ \ \ if\ maparg(amap,mapmode)\ !=\ ""')|call delete('/Users/robbie/.vim/	\ let\ s:restoremap_{a:suffix}\ =\ s:restoremap_{a:suffix}."|".mapmode."map\ ".amap."\ ".dobuffer.maprhs')|call delete('/Users/robbie/.vim/	if\ dounmap')|call delete('/Users/robbie/.vim/	endif')|call delete('/Users/robbie/.vim/\ \ \ endwhile')|call delete('/Users/robbie/.vim/"\ \ call\ Dret("SaveUserMaps\ :\ restoremap_".a:suffix.":\ ".s:restoremap_{a:suffix})')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/"\ RestoreUserMaps:\ {{{2')|call delete('/Users/robbie/.vim/fun!\ RestoreUserMaps(suffix)')|call delete('/Users/robbie/.vim/\ \ if\ exists("s:restoremap_{a:suffix}")')|call delete('/Users/robbie/.vim/\ \ \ if\ s:restoremap_{a:suffix}\ !=\ ""')|call delete('/Users/robbie/.vim/\ \ \ \ exe\ "silent!\ ".s:restoremap_{a:suffix}')|call delete('/Users/robbie/.vim/\ \ \ unlet\ s:restoremap_{a:suffix}')|call delete('/Users/robbie/.vim/"\ \ call\ Dret("RestoreUserMaps")')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/"\ \ Restore:\ {{{1')|call delete('/Users/robbie/.vim/let\ &cpo=\ s:keepcpo')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/"\ \ Modelines:\ {{{1')|call delete('/Users/robbie/.vim/"\ vim:\ ts=4\ fdm=marker')|call delete('/Users/robbie/.vim/1469')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/\ \ \ \ \ \ \ \ \ \ \ (remove\ NOSPAM\ from\ Campbell's\ email\ first)')|call delete('/Users/robbie/.vim/\ \ \ \ \ \ \ \ \ \ \ The\ VIM\ LICENSE\ applies\ to\ Align.vim,\ AlignMaps.vim,\ and\ Align.txt')|call delete('/Users/robbie/.vim/\ \ \ \ \ \ \ \ \ \ \ NO\ WARRANTY,\ EXPRESS\ OR\ IMPLIED.\ \ USE\ AT-YOUR-OWN-RISK.')|call delete('/Users/robbie/.vim/==============================================================================')|call delete('/Users/robbie/.vim/	1.\ Contents.................:\ |align-contents|')|call delete('/Users/robbie/.vim/	3.\ Alignment\ Usage..........:\ |align-usage|')|call delete('/Users/robbie/.vim/	\ \ \ Alignment\ Commands.......:\ |align-commands|')|call delete('/Users/robbie/.vim/	\ \ \ \ \ Separators.............:\ |alignctrl-separators|')|call delete('/Users/robbie/.vim/	\ \ \ \ \ Justification..........:\ |alignctrl-l|\ |alignctrl-r|\ |alignctrl-c|')|call delete('/Users/robbie/.vim/	\ \ \ \ \ Cyclic/Sequential......:\ |alignctrl-=|\ |alignctrl-C|')|call delete('/Users/robbie/.vim/	\ \ \ \ \ Line\ (de)Selection.....:\ |alignctrl-g|\ |alignctrl-v|')|call delete('/Users/robbie/.vim/	\ \ \ \ \ Padding................:\ |alignctrl-p|\ |alignctrl-P|')|call delete('/Users/robbie/.vim/	\ \ \ Alignment................:\ |align-align|')|call delete('/Users/robbie/.vim/	\ \ \ \ \ /a,....................:\ |alignmap-a,|')|call delete('/Users/robbie/.vim/	\ \ \ \ \ /a<....................:\ |alignmap-a<|')|call delete('/Users/robbie/.vim/	\ \ \ \ \ /acom..................:\ |alignmap-acom|')|call delete('/Users/robbie/.vim/	\ \ \ \ \ /ascom.................:\ |alignmap-ascom|')|call delete('/Users/robbie/.vim/	\ \ \ \ \ /adef..................:\ |alignmap-adef|')|call delete('/Users/robbie/.vim/	\ \ \ \ \ /adcom.................:\ |alignmap-adcom|')|call delete('/Users/robbie/.vim/	\ \ \ \ \ /tsp...................:\ |alignmap-tsp|')|call delete('/Users/robbie/.vim/	\ \ \ \ \ /tt....................:\ |alignmap-tt|')|call delete('/Users/robbie/.vim/	\ \ \ \ \ /T=....................:\ |alignmap-T=|')|call delete('/Users/robbie/.vim/	5.\ Alignment\ Tool\ History...:\ |align-history|')|call delete('/Users/robbie/.vim/==============================================================================')|call delete('/Users/robbie/.vim/		vim\ Align.vba.gz')|call delete('/Users/robbie/.vim/<	should\ put\ its\ components\ where\ they\ belong.\ \ The\ components\ are:\ >')|call delete('/Users/robbie/.vim/		.vim/plugin/AlignMapsPlugin.vim')|call delete('/Users/robbie/.vim/		.vim/autoload/Align.vim')|call delete('/Users/robbie/.vim/		.vim/doc/Align.txt')|call delete('/Users/robbie/.vim/	To\ see\ examples,\ see\ |alignctrl|\ and\ |alignmaps|')|call delete('/Users/robbie/.vim//=============+=========+=====================================================/')|call delete('/Users/robbie/.vim/||\ \ Commands\ \ \ /\ Value/\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Explanation\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ ||')|call delete('/Users/robbie/.vim/++==============+====+=======================================================++')|call delete('/Users/robbie/.vim/||\ \ \ \ \ \ \ \ \ \ \ \ \ \ |\ \ \ \ +-------------------------------------------------------+|')|call delete('/Users/robbie/.vim/||\ \ \ \ \ \ \ \ \ \ \ \ \ \ |\ \ \ \ |\ \ :AlignCtrl\ =lp0P0W\ &\ //\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ ||')|call delete('/Users/robbie/.vim/||\ \ \ \ \ \ \ \ \ \ \ \ \ \ |\ \ \ \ |\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ ||')|call delete('/Users/robbie/.vim/||\ \ \ 1st\ arg\ \ \ \ |\ \ =\ |\ =\ \ all\ separator\ patterns\ are\ equivalent\ and\ are\ \ \ \ \ \ ||')|call delete('/Users/robbie/.vim/||\ \ \ \ \ \ \ \ \ \ \ \ \ \ |\ \ \ \ |\ C\ \ cycle\ through\ separator\ patterns.\ \ Patterns\ are\ \ \ \ ||')|call delete('/Users/robbie/.vim/||\ \ \ \ \ \ \ \ \ \ \ \ \ \ |\ \ \ \ |\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ ||')|call delete('/Users/robbie/.vim/||\ \ \ \ \ \ \ \ \ \ \ \ \ \ |\ \ \ \ |\ >\ \ right\ justify\ separator\ \ too.\ \ Separator\ styles\ \ \ \ ||')|call delete('/Users/robbie/.vim/||\ \ \ \ \ \ \ \ \ \ \ \ \ \ |\ \ \ \ |\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ ||')|call delete('/Users/robbie/.vim/||\ \ \ \ \ \ \ \ \ \ \ \ \ \ |\ \ \ \ |\ r\ \ right\ justify\ \ cyclic\ (ie.\ lrc\ would\ mean\ left\ j.,\ ||')|call delete('/Users/robbie/.vim/||\ \ \ \ \ \ \ \ \ \ \ \ \ \ |\ \ \ \ |\ -\ \ skip\ this\ separator\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ ||')|call delete('/Users/robbie/.vim/||\ \ \ \ \ \ \ \ \ \ \ \ \ \ |\ \ \ \ |\ :\ \ treat\ rest\ of\ text\ as\ a\ field\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ ||')|call delete('/Users/robbie/.vim/||\ \ \ \ \ \ \ \ \ \ \ \ \ \ |\ p1\ |\ p\#\#\#\ pad\ separator\ on\ left\ \ by\ \#\ blanks\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ ||')|call delete('/Users/robbie/.vim/||\ \ \ \ \ \ \ \ \ \ \ \ \ \ |\ \ \ \ |\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ ||')|call delete('/Users/robbie/.vim/||\ \ \ \ \ \ \ \ \ \ \ \ \ \ |\ \ \ \ |\ \ \ \ space\ to\ all\ lines\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ ||')|call delete('/Users/robbie/.vim/||\ \ \ \ \ \ \ \ \ \ \ \ \ \ |\ \ \ \ |\ \ \ \ if\ it\ varies\ from\ line\ to\ line\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ ||')|call delete('/Users/robbie/.vim/||\ \ \ \ \ \ \ \ \ \ \ \ \ \ |\ \ \ \ |\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ ||')|call delete('/Users/robbie/.vim/||\ \ \ \ \ \ \ \ \ \ \ \ \ \ |\ \ \ \ |\ \ \ \ align\ on\ lines\ that\ have\ a\ match\ \ (inspired\ by\ \ \ \ \ ||')|call delete('/Users/robbie/.vim/||\ \ \ \ \ \ \ \ \ \ \ \ \ \ |\ \ \ \ |\ v\ \ second\ argument\ is\ a\ selection\ pattern\ --\ only\ \ \ \ \ ||')|call delete('/Users/robbie/.vim/||\ \ \ \ \ \ \ \ \ \ \ \ \ \ |\ \ \ \ |\ \ \ \ by\ :v/selection\ pattern/command)\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ ||')|call delete('/Users/robbie/.vim/||\ \ \ \ \ \ \ \ \ \ \ \ \ \ |\ \ \ \ |\ m\ \ Map\ support:\ AlignCtrl\ will\ immediately\ do\ an\ \ \ \ \ \ ||')|call delete('/Users/robbie/.vim/||\ \ \ \ \ \ \ \ \ \ \ \ \ \ |\ \ \ \ |\ \ \ \ an\ AlignPop\ at\ the\ end.\ \ This\ feature\ allows\ maps\ \ ||')|call delete('/Users/robbie/.vim/||\ \ \ \ \ \ \ \ \ \ \ \ \ \ |\ \ \ \ |\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ ||')|call delete('/Users/robbie/.vim/||\ \ \ \ \ \ \ \ \ \ \ \ \ \ |\ \ \ \ |\ \ \ \ AlignCtrl\ default\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ ||')|call delete('/Users/robbie/.vim/||\ \ \ \ \ \ \ \ \ \ \ \ \ \ |\ \ \ \ |\ \ \ \ stack\ &\ set\ the\ default:\ \ AlignCtrl\ "Ilp1P1="\ '='\ \ ||')|call delete('/Users/robbie/.vim/||\ \ \ \ \ \ \ \ \ \ \ \ \ \ +----+-------------------------------------------------------+|')|call delete('/Users/robbie/.vim/||\ \ \ \ \ \ \ \ \ \ \ \ \ \ +------------------------------------------------------------+|')|call delete('/Users/robbie/.vim/||==============+============================================================+|')|call delete('/Users/robbie/.vim/||[range]Align!\ |\ \ \ [AlignCtrl\ settings]\ [..list-of-separators..]\ \ \ \ \ \ \ \ \ \ \ \ ||')|call delete('/Users/robbie/.vim/||\ \ \ \ \ \ \ \ \ \ \ \ \ \ |\ \ Aligns\ text\ over\ the\ given\ range.\ \ The\ range\ may\ be\ \ \ \ \ \ \ ||')|call delete('/Users/robbie/.vim/||\ \ \ \ \ \ \ \ \ \ \ \ \ \ |\ \ the\ command\ line.\ \ The\ Align\ operation\ may\ be\ invoked\ \ \ \ \ ||')|call delete('/Users/robbie/.vim/||\ \ \ \ \ \ \ \ \ \ \ \ \ \ |\ \ argument\ is\ 0=separators\ only,\ 1=AlignCtrl\ option\ string\ \ ||')|call delete('/Users/robbie/.vim/||\ \ \ \ \ \ \ \ \ \ \ \ \ \ |\ \ \ :[range]Align\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ ||')|call delete('/Users/robbie/.vim/||\ \ \ \ \ \ \ \ \ \ \ \ \ \ |\ \ \ :[range]call\ Align\#Align(0)\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ ||')|call delete('/Users/robbie/.vim//=============================================================================/')|call delete('/Users/robbie/.vim/==============================================================================')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/		*\ separated\ by\ one\ or\ more\ separator\ pattern(s):')|call delete('/Users/robbie/.vim/>')|call delete('/Users/robbie/.vim/		ws\ field\ ws\ separator\ ws\ field\ ws\ separator\ ...')|call delete('/Users/robbie/.vim/	where\ "ws"\ stands\ for\ "white\ space"\ such\ as\ blanks\ and/or\ tabs,')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/		xx=\ yy=\ zz=\ 4\;')|call delete('/Users/robbie/.vim/		a=\ b=\ c=\ 3\;')|call delete('/Users/robbie/.vim/	Assume\ that\ it\ is\ desired\ to\ line\ up\ all\ the\ "="\ signs\;\ these,')|call delete('/Users/robbie/.vim/	alphameric\ text.\ \ Assuming\ they\ lie\ on\ lines\ 1-4,\ one\ may\ align')|call delete('/Users/robbie/.vim/		:AlignCtrl\ l')|call delete('/Users/robbie/.vim/<	The\ result\ is:\ >')|call delete('/Users/robbie/.vim/		xx\ \ =\ yy\ \ =\ zz\ \ =\ 4\;')|call delete('/Users/robbie/.vim/		a\ \ \ =\ b\ \ \ =\ c\ \ \ =\ 3\;')|call delete('/Users/robbie/.vim/<	Note\ how\ each\ "="\ sign\ is\ surrounded\ by\ a\ single\ space\;\ the')|call delete('/Users/robbie/.vim/	and\ P1\ means\ one\ space\ after\ it).\ \ If\ you\ wish\ to\ change\ the')|call delete('/Users/robbie/.vim/		:AlignCtrl\ lp0P0')|call delete('/Users/robbie/.vim/<	Next,\ note\ how\ each\ field\ is\ left\ justified\;\ that's\ what\ the\ "l"')|call delete('/Users/robbie/.vim/	had\ been\ desired,\ an\ "r"\ could've\ been\ used:\ >')|call delete('/Users/robbie/.vim/<	yielding\ >')|call delete('/Users/robbie/.vim/		\ xx\ =\ \ yy\ =\ \ zz\ =\ 4\;')|call delete('/Users/robbie/.vim/		\ \ a\ =\ \ \ b\ =\ \ \ c\ =\ 3\;')|call delete('/Users/robbie/.vim/	|alignctrl-c|\ and\ |alignctrl--|.')|call delete('/Users/robbie/.vim/	Separators,\ although\ commonly\ only\ one\ character\ long,\ are\ actually')|call delete('/Users/robbie/.vim/	justify,\ right\ justify,\ or\ center\ them,\ too\ (see\ |alignctrl-<|).')|call delete('/Users/robbie/.vim/	Assume\ that\ for\ some\ reason\ a\ left-right-left-right-...\ justification')|call delete('/Users/robbie/.vim/		:AlignCtrl\ lr')|call delete('/Users/robbie/.vim/<	because\ the\ justification\ commands\ are\ considered\ to\ be\ "cylic"\;\ ie.')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/	there\ will\ help,\ too.')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/	minor\ commands:')|call delete('/Users/robbie/.vim/	\ \ AlignCtrl\ :\ this\ command/function\ sets\ up\ alignment\ options')|call delete('/Users/robbie/.vim/		\ \ \ \ \ \ It\ controls\ such\ things\ as:\ how\ to\ specify\ field')|call delete('/Users/robbie/.vim/		\ \ \ \ \ \ separators,\ left/right/center\ justification,\ etc.\ >')|call delete('/Users/robbie/.vim/\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Interpretation:\ during\ subsequent\ alignment')|call delete('/Users/robbie/.vim/			\ \ \ \ \ whitespace.\ \ Use\ no\ padding\ before\ separators')|call delete('/Users/robbie/.vim/<')|call delete('/Users/robbie/.vim/		\ \ \ \ \ \ align\ text\ based\ on\ one\ or\ more\ separator\ patterns.\ \ The')|call delete('/Users/robbie/.vim/		\ \ \ \ \ \ itself.\ >')|call delete('/Users/robbie/.vim/			ex.\ :\%Align\ ,')|call delete('/Users/robbie/.vim/			\ \ \ \ file.')|call delete('/Users/robbie/.vim/		\ \ \ \ \ \ to\ precede\ the\ alignment\ patterns.\ >')|call delete('/Users/robbie/.vim/<		\ \ \ \ \ \ This\ will\ align\ all\ "="\ in\ the\ file\ with\ two\ padding')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/		\ \ \ \ \ \ Align\ and\ AlignCtrl\ use\ |<q-args>|\ to\ obtain\ their')|call delete('/Users/robbie/.vim/		\ \ \ \ \ \ split\ arguments\ at\ whitespace\ unless\ inside\ "..."s.')|call delete('/Users/robbie/.vim/		\ \ \ \ \ \ by\ preceding\ such\ characters\ with\ a\ backslash.')|call delete('/Users/robbie/.vim/	\ \ AlignPush\ :\ this\ command/function\ pushes\ the\ current\ AlignCtrl')|call delete('/Users/robbie/.vim/			ex.\ :AlignPush')|call delete('/Users/robbie/.vim/			\ \ \ \ settings,\ whatever\ they\ may\ be.\ \ They'll')|call delete('/Users/robbie/.vim/			\ \ \ \ AlignCtrl\ is\ used\ to\ change\ them.')|call delete('/Users/robbie/.vim/	\ \ AlignPop\ \ :\ this\ command/function\ pops\ the\ current\ AlignCtrl')|call delete('/Users/robbie/.vim/			ex.\ :AlignPop')|call delete('/Users/robbie/.vim/			\ \ \ \ used\ (at\ least\ once)\ previously\;\ this\ command')|call delete('/Users/robbie/.vim/			\ \ \ \ was\ last\ used.')|call delete('/Users/robbie/.vim/	\ \ \ \ \ \ \ \ \ \ \ \ \ \ an\ AlignPop\ after\ an\ Align\ (primarily\ this\ is\ for\ maps).')|call delete('/Users/robbie/.vim/ALIGNMENT\ OPTIONS			*align-option*\ *align-options*\ {{{2')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/	available\ with\ utf-8,\ Align\ now\ provides\ a\ special\ option\ which\ you')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/>')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/	well.\ \ It\ is\ the\ default\ for:')|call delete('/Users/robbie/.vim/	\ \ enc=latin1')|call delete('/Users/robbie/.vim/	\ \ $LANG\ is\ en_US.UTF-8\ (assuming\ USA\ english)')|call delete('/Users/robbie/.vim/	Number\ of\ codepoints\ (Latin\ a\ +\ combining\ circumflex\ is\ two\ codepoints)~')|call delete('/Users/robbie/.vim/			let\ g:Align_xstrlen=\ 1\ \ \ \ \ \ \ \ \ \ \ \ \ \ (default)')|call delete('/Users/robbie/.vim/	Number\ of\ spacing\ codepoints\ (Latin\ a\ +\ combining\ circumflex\ is\ one~')|call delete('/Users/robbie/.vim/	each\;\ etc.)~')|call delete('/Users/robbie/.vim/			let\ g:Align_xstrlen=\ 2')|call delete('/Users/robbie/.vim/	Virtual\ length\ (counting,\ for\ instance,\ tabs\ as\ anything\ between\ 1\ and~')|call delete('/Users/robbie/.vim/	immediately\ preceded\ by\ lam,\ one\ otherwise,\ etc.)~')|call delete('/Users/robbie/.vim/			let\ g:Align_xstrlen=\ 3')|call delete('/Users/robbie/.vim/	By\ putting\ one\ of\ these\ settings\ into\ your\ <.vimrc>,\ Align\ will\ use\ an')|call delete('/Users/robbie/.vim/	of\ the\ Vim's\ built-in\ |strlen()|\ function.\ \ Since\ the\ function\ is')|call delete('/Users/robbie/.vim/	correctly.\ \ The\ last\ setting\ (g:Align_xstrlen=\ 3)\ probably\ will\ run')|call delete('/Users/robbie/.vim/	these)')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/	controls\ subsequent\ alignment\ operation(s).')|call delete('/Users/robbie/.vim/	The\ first\ argument\ to\ AlignCtrl\ is\ a\ string\ which\ may\ contain\ one\ or')|call delete('/Users/robbie/.vim/	by\ single\ letters\;\ the\ exceptions\ are\ the\ p\#\ and\ P\#\ commands\ which')|call delete('/Users/robbie/.vim/	separator.')|call delete('/Users/robbie/.vim/	The\ typical\ text\ line\ is\ considered\ to\ be\ composed\ of\ two\ or\ more')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/<')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/	SEPARATORS				*alignctrl-separators*\ {{{3')|call delete('/Users/robbie/.vim/	As\ a\ result,\ separators\ may\ not\ have\ white\ space\ (tabs\ or\ blanks)\ on')|call delete('/Users/robbie/.vim/	not).\ \ Usually\ such\ separators\ are\ not\ needed,\ although\ a\ map\ has\ been')|call delete('/Users/robbie/.vim/	(see\ |alignmap-tsp|).')|call delete('/Users/robbie/.vim/	However,\ if\ you\ really\ need\ to\ have\ separators\ with\ leading\ or')|call delete('/Users/robbie/.vim/	first\ (ie.\ s/\ \ ::\ \ /@/g),\ do\ the\ alignment\ on\ the\ temporary\ pattern')|call delete('/Users/robbie/.vim/	to\ their\ desired\ condition\ (ie.\ s/@/\ \ ::\ \ /g).')|call delete('/Users/robbie/.vim/	The\ Align\#Align()\ function\ will\ first\ convert\ tabs\ over\ the\ region\ into')|call delete('/Users/robbie/.vim/	space,\ white\ space\ surrounding\ the\ fields\ is\ ignored.\ \ One\ has\ three')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/	---\ 						*alignctrl-w*')|call delete('/Users/robbie/.vim/	---\ 						*alignctrl-I*')|call delete('/Users/robbie/.vim/		W\ :\ retain\ all\ selected\ lines'\ initial\ white\ space')|call delete('/Users/robbie/.vim/		\ \ \ \ re-use\ it\ for\ subsequent\ lines')|call delete('/Users/robbie/.vim/	Example:\ Leading\ white\ space\ options:\ >')|call delete('/Users/robbie/.vim/	\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ |AlignCtrl\ w=\ :=|\ \ AlignCtrl\ W=\ :=\ \ |\ AlignCtrl\ I=\ :=\ |')|call delete('/Users/robbie/.vim/\ \ \ \ \ \ |\ \ \ \ \ Original\ \ \ \ \ |\ \ \ w\ option\ \ \ \ |\ \ \ \ \ W\ option\ \ \ \ \ \ |\ \ \ \ \ I\ option\ \ \ \ |')|call delete('/Users/robbie/.vim/\ \ \ \ \ \ |\ \ \ a\ :=\ baaa\ \ \ \ \ \ |a\ \ \ \ \ :=\ baaa\ \ |\ \ \ a\ \ \ \ \ \ :\ =\ baaa\ |\ \ \ a\ \ \ \ \ :=\ baaa\ |')|call delete('/Users/robbie/.vim/\ \ \ \ \ \ |\ \ \ \ \ \ \ ee\ :=\ f\ \ \ \ |ee\ \ \ \ :=\ f\ \ \ \ \ |\ \ \ \ \ \ \ ee\ :\ =\ f\ \ \ \ |\ \ \ ee\ \ \ \ :=\ f\ \ \ \ |')|call delete('/Users/robbie/.vim/<')|call delete('/Users/robbie/.vim/	Using\ Align\ with\ w\ eliminated\ each\ line's\ leading\ white\ space.')|call delete('/Users/robbie/.vim/	Using\ Align\ with\ I\ applied\ the\ first\ line's\ leading\ white\ space')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/	------						*alignctrl-l*')|call delete('/Users/robbie/.vim/	------						*alignctrl-c*')|call delete('/Users/robbie/.vim/	With\ "lrc",\ the\ fields\ will\ be\ left-justified,\ right-justified,\ or')|call delete('/Users/robbie/.vim/	"lrc"\ options\ are\ re-used\ by\ cycling\ through\ them\ as\ needed:')|call delete('/Users/robbie/.vim/		l\ \ \ means\ llllll....')|call delete('/Users/robbie/.vim/		lr\ \ means\ lrlrlr....')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/\ \ \ \ \ +------------+-------------------+-------------------+-------------------+')|call delete('/Users/robbie/.vim/\ \ \ \ \ +------------+-------------------+-------------------+-------------------+')|call delete('/Users/robbie/.vim/\ \ \ \ \ |\ ccc=a=bb=2\ |ccc\ =\ a\ \ \ =\ bb\ \ =\ 2|ccc\ =\ \ \ a\ =\ \ bb\ =\ 2|ccc\ =\ \ \ a\ =\ bb\ \ =\ 2|')|call delete('/Users/robbie/.vim/\ \ \ \ \ +------------+-------------------+-------------------+-------------------+')|call delete('/Users/robbie/.vim/\ \ \ \ \ +------------+-------------------+-------------------+-------------------+')|call delete('/Users/robbie/.vim/		AlignCtrl\ l\ :\ The\ =\ separator\ is\ repeatedly\ re-used,\ as\ the')|call delete('/Users/robbie/.vim/			\ \ \ \ \ \ Every\ time\ left-justification\ is\ used\ for\ fields.')|call delete('/Users/robbie/.vim/			\ \ \ \ \ \ cycle\ only\ consists\ of\ one\ character\ (the\ "l").')|call delete('/Users/robbie/.vim/		AlignCtrl\ lr:\ Again,\ the\ "="\ separator\ is\ repeatedly\ re-used,')|call delete('/Users/robbie/.vim/			\ \ \ \ \ \ left\ and\ right.')|call delete('/Users/robbie/.vim/	Even\ more\ separator\ control\ is\ available.\ \ With\ "-+:":')|call delete('/Users/robbie/.vim/	\ \ \ \ -\ :\ skip\ treating\ the\ separator\ as\ a\ separator.\ \ \ *alignctrl--*')|call delete('/Users/robbie/.vim/	\ \ \ \ :\ :\ treat\ the\ rest\ of\ the\ line\ as\ a\ single\ field\ \ *alignctrl-:*')|call delete('/Users/robbie/.vim/\ \ \ \ \ Example:\ More\ justification\ options:\ \ Align\ =\ >')|call delete('/Users/robbie/.vim/\ \ \ \ \ |\ \ Original\ \ |\ \ AlignCtrl\ -l\ |\ AlignCtrl\ rl+\ \ \ \ \ \ |\ AlignCtrl\ l:\ \ |')|call delete('/Users/robbie/.vim/\ \ \ \ \ |\ a=bb=ccc=1\ |a=bb\ \ \ =\ ccc=1\ |\ \ a\ =\ bb\ \ =\ ccc\ =\ 1\ |a\ \ \ =\ bb=ccc=1\ |')|call delete('/Users/robbie/.vim/\ \ \ \ \ |\ dd=eee=f=3\ |dd=eee\ =\ f=3\ \ \ |\ dd\ =\ eee\ =\ f\ \ \ =\ 3\ |dd\ \ =\ eee=f=3\ \ |')|call delete('/Users/robbie/.vim/\ \ \ \ \ |\ Alignment\ \ |l\ \ \ \ \ \ \ \ l\ \ \ \ \ |\ \ r\ \ \ l\ \ \ \ \ l\ \ \ \ \ l\ |l\ \ \ \ \ l\ \ \ \ \ \ \ \ |')|call delete('/Users/robbie/.vim/<')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/	\ \ and\ so\ "a=bb",\ "ccc=a",\ and\ "dd=eee"\ are\ considered\ as\ single\ fields.')|call delete('/Users/robbie/.vim/	\ \ The\ next\ "="\ separator\ has\ its\ (left\ side)\ field\ left-justified.')|call delete('/Users/robbie/.vim/	\ \ specification\ is\ equivalent\ to\ "-l-l-l\ ...".')|call delete('/Users/robbie/.vim/	\ \ Hence\ the\ next\ specification\ is\ a\ "skip",\ so\ "ccc=1",\ etc\ are\ fields.')|call delete('/Users/robbie/.vim/	In\ the\ second\ example\ in\ "More\ justification\ options":')|call delete('/Users/robbie/.vim/	\ \ The\ first\ field\ is\ right-justified,\ the\ second\ field\ is\ left')|call delete('/Users/robbie/.vim/	\ \ command\ (ie.\ they\ are\ left\ justified,\ too).')|call delete('/Users/robbie/.vim/	\ \ Hence\ rl+\ is\ equivalent\ to\ \ \ \ \ \ \ \ \ rlllllllll\ ...')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/	single\ separator.')|call delete('/Users/robbie/.vim/	ex.\ 1st\ separator\ only:\ \ \ \ AlignCtrl\ l:')|call delete('/Users/robbie/.vim/	\ \ \ \ 3rd\ separator\ only:\ \ \ \ AlignCtrl\ --l:')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/	---						\ \ \ \ \ *alignctrl-=*')|call delete('/Users/robbie/.vim/	---')|call delete('/Users/robbie/.vim/	The\ separators\ themselves\ may\ be\ considered\ as\ equivalent\ and')|call delete('/Users/robbie/.vim/	Separators\ are\ regular\ expressions\ (|regexp|)\ and\ are\ specified\ as\ the')|call delete('/Users/robbie/.vim/	equivalent\ and\ simultaneously\ active,\ there\ will\ be\ one\ pattern')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/		/(pat1/|pat2/|pat3/)')|call delete('/Users/robbie/.vim/	Each\ separator\ pattern\ is\ thus\ equivalent\ and\ simultaneously\ active.')|call delete('/Users/robbie/.vim/	one\ of\ which\ is\ active\ for\ each\ field\ at\ a\ time.')|call delete('/Users/robbie/.vim/	Example:\ Equivalent/Simultaneously-Active\ vs\ Cyclic\ Separators\ >')|call delete('/Users/robbie/.vim/\ |\ \ \ Original\ \ |\ AlignCtrl\ =\ =\ +\ -|\ AlignCtrl\ =\ =\ \ \ \ \ \ \ |\ AlignCtrl\ C\ =\ +\ -\ \ \ \ |')|call delete('/Users/robbie/.vim/\ |a\ =\ b\ +\ c\ -\ d|a\ =\ b\ +\ c\ -\ d\ \ \ \ \ |a\ =\ b\ +\ c\ -\ d\ \ \ \ \ \ \ \ |a\ =\ b\ \ \ \ \ \ \ \ \ +\ c\ -\ d\ |')|call delete('/Users/robbie/.vim/\ |w\ =\ s\ -\ t\ =\ 0|w\ =\ s\ -\ t\ =\ 0\ \ \ \ \ |w\ =\ s\ -\ t\ \ \ \ \ =\ 0\ \ \ \ |w\ =\ s\ -\ t\ =\ 0\ \ \ \ \ \ \ \ \ |')|call delete('/Users/robbie/.vim/<')|call delete('/Users/robbie/.vim/	considered\ as\ equivalent\ and\ simultaneously\ active\ field\ separators.')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/	consequently\ "b\ +\ c\ -\ d"\ is\ now\ a\ single\ field.')|call delete('/Users/robbie/.vim/	The\ third\ example\ illustrates\ cyclic\ field\ separators\ and\ is\ analyzed')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/	\ \ \ a\ \ \ \ \ \ =\ \ \ \ \ \ b\ \ \ \ \ \ \ \ \ \ \ \ \ +\ \ \ \ \ \ \ c\ \ \ \ \ \ \ \ -\ \ \ \ \ \ \ d')|call delete('/Users/robbie/.vim/	\ \ \ w\ \ \ \ \ \ =\ \ \ \ \ \ s\ -\ t\ =\ 0')|call delete('/Users/robbie/.vim/	The\ word\ "cyclic"\ is\ used\ because\ the\ patterns\ form\ a\ cycle\ of\ use\;\ in')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/		Label\ :\ this\ is\ some\ text\ discussing\ ":"s\ |\ ex.\ abc:def:ghi')|call delete('/Users/robbie/.vim/<')|call delete('/Users/robbie/.vim/	\ \ \ \ \ \ \ \ (select\ lines)Align\ >')|call delete('/Users/robbie/.vim/\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Label\ :\ this\ is\ some\ text\ with\ a\ ":"\ in\ it\ |\ ex.\ abcd:efg')|call delete('/Users/robbie/.vim/	In\ the\ current\ example,')|call delete('/Users/robbie/.vim/	\ \ |\ is\ the\ second\ separator\ \ \ \ \ \ \ but\ subsequent\ ":"s\ are\ not.')|call delete('/Users/robbie/.vim/	\ \ :\ is\ the\ fourth\ separator\ \ \ \ \ \ \ Since\ there\ aren't\ two\ bars,')|call delete('/Users/robbie/.vim/	\ \ |\ is\ the\ sixth\ separator\ \ \ \ \ \ \ \ don't\ appear.')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/		AlignCtrl\ WCl:\ :\ |')|call delete('/Users/robbie/.vim/	would\ be\ used\ after\ the\ vertical\ bar.')|call delete('/Users/robbie/.vim/	Example:\ Cyclic\ separators')|call delete('/Users/robbie/.vim/	\ \ \ \ Original:\ >')|call delete('/Users/robbie/.vim/		aa|\ bb&cc\ |\ (dd|ee)\ &\ ff-gg-hh')|call delete('/Users/robbie/.vim/<')|call delete('/Users/robbie/.vim/		a\ \ \ |\ b&c\ \ \ \ \ |\ (d|e)\ \ \ \ \ &\ f\ \ \ -\ g-h')|call delete('/Users/robbie/.vim/		aaa\ |\ bbb&ccc\ |\ (ddd|eee)\ &\ fff\ -\ ggg-hhh')|call delete('/Users/robbie/.vim/	In\ this\ example,')|call delete('/Users/robbie/.vim/	the\ third\ \ \ \ \ \ \ \ \ \ \ \ separator\ \ is\ \ "&",\ and')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/	the\ fifth\ and\ sixth\ \ separators\ are\ "|",')|call delete('/Users/robbie/.vim/	the\ eighth\ \ \ \ \ \ \ \ \ \ \ separator\ \ is\ \ "-",\ etc.')|call delete('/Users/robbie/.vim/	Thus\ the\ first\ "&"s\ are\ (not\ yet)\ separators,\ and\ hence\ are\ treated\ as')|call delete('/Users/robbie/.vim/	shown\ here\ means\ that\ Align\ will\ work\ with\ >')|call delete('/Users/robbie/.vim/	field\ |\ field\ |\ field\ &\ field\ -\ field\ |\ field\ |\ field\ &\ field\ -\ ...')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/	<>|	SEPARATOR\ JUSTIFICATION			*alignctrl->*\ {{{3')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/	Hence\ they\ too\ may\ be\ justified\ left,\ right,\ or\ centered.')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/		>\ \ means\ >>>>>...\ \ \ \ justify\ separator(s)\ to\ the\ right')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/				+-----------------+')|call delete('/Users/robbie/.vim/				+-----------------+')|call delete('/Users/robbie/.vim/				|\ aa\ --\ bb\ --\ ccc\ |')|call delete('/Users/robbie/.vim/	+---------------------+-+-----------------+-+---------------------+')|call delete('/Users/robbie/.vim/	+---------------------+---------------------+---------------------+')|call delete('/Users/robbie/.vim/	|\ aa\ \ --\ \ bb\ \ --\ \ ccc\ |\ aa\ \ \ --\ bb\ \ \ --\ ccc\ |\ aa\ \ --\ \ bb\ \ --\ \ ccc\ |')|call delete('/Users/robbie/.vim/	+---------------------+---------------------+---------------------+')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/	gv	SELECTIVE\ APPLICATION			*alignctrl-v*\ {{{3')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/	These\ two\ options\ provide\ a\ way\ to\ select\ (g)\ or\ to\ deselect\ (v)\ lines')|call delete('/Users/robbie/.vim/	it\ results\ in\ Align\#Align()\ being\ called\ on\ each\ line\ satisfying\ the')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/<')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/<')|call delete('/Users/robbie/.vim/	example\ of\ use,\ consider\ the\ following\ example:\ >')|call delete('/Users/robbie/.vim/				\ \ \ \ \ \ \ \ \ \ \ :AlignCtrl\ v\ ^/s*//*')|call delete('/Users/robbie/.vim/	+----------------+------------------+----------------+')|call delete('/Users/robbie/.vim/	|three=\ 4\;\ \ \ \ \ \ \ |three\ \ \ =\ 4\;\ \ \ \ \ \ |three\ =\ 4\;\ \ \ \ \ \ |')|call delete('/Users/robbie/.vim/	|five=\ 6\;\ \ \ \ \ \ \ \ |five\ \ \ \ =\ 6\;\ \ \ \ \ \ |five\ \ =\ 6\;\ \ \ \ \ \ |')|call delete('/Users/robbie/.vim/<')|call delete('/Users/robbie/.vim/	"skip=this"\ comment.')|call delete('/Users/robbie/.vim/	The\ second\ "Align\ ="\ had\ a\ AlignCtrl\ v-pattern\ which\ caused\ it\ to\ skip')|call delete('/Users/robbie/.vim/	')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/		AlignCtrl\ v')|call delete('/Users/robbie/.vim/	To\ see\ what\ g/v\ patterns\ are\ currently\ active,\ just\ use\ the\ reporting')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/<')|call delete('/Users/robbie/.vim/	---')|call delete('/Users/robbie/.vim/	---')|call delete('/Users/robbie/.vim/	This\ option\ primarily\ supports\ the\ development\ of\ maps.\ \ The')|call delete('/Users/robbie/.vim/	current\ alignment\ control\ settings).\ \ The\ next\ Align\#Align()\ will,\ in')|call delete('/Users/robbie/.vim/	Thus\ the\ Align\#AlignCtrl\ settings\ that\ follow\ the\ "m"\ are\ only')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/	---')|call delete('/Users/robbie/.vim/	P\#\#\#	PADDING					*alignctrl-P*\ {{{3')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/	about\ the\ separator.\ \ One\ may\ pad\ separators\ with\ zero\ to\ nine\ spaces\;')|call delete('/Users/robbie/.vim/	may\ specify\ padding\ separately\ for\ each\ field\ or\ re-use\ a\ padding')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/	+---------+----------------------------------+')|call delete('/Users/robbie/.vim/\ \ \ \ \ \ \ \ |\ Align\ =\ |\ a\ =b=c\ \ =d\ =e=f\ \ =g\ =h=1\ \ \ \ \ \ \ \ \ |')|call delete('/Users/robbie/.vim/	|\ prepad\ \ |\ \ \ 1\ 0\ \ \ 2\ \ 1\ 0\ \ \ 2\ \ 1\ 0\ \ \ \ \ \ \ \ \ \ |')|call delete('/Users/robbie/.vim/<')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/		pre-pad\ the\ second\ "="\ with\ no\ blanks,')|call delete('/Users/robbie/.vim/		pre-pad\ the\ fourth\ "="\ with\ a\ single\ blank,')|call delete('/Users/robbie/.vim/		pre-pad\ the\ sixth\ \ "="\ with\ two\ blanks,')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/	No\ option\ given		DISPLAY\ STATUS	*alignctrl-*		{{{3')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/	alignment\ control\ settings.\ \ A\ typical\ display\ is\ shown\ below:\ >')|call delete('/Users/robbie/.vim/		AlignCtrl<=>\ qty=1\ AlignStyle<l>\ Padding<1|1>')|call delete('/Users/robbie/.vim/<')|call delete('/Users/robbie/.vim/	equivalent\;\ in\ this\ case,\ there's\ only\ one\ (qty=1).\ \ Fields\ will\ be')|call delete('/Users/robbie/.vim/	will\ be\ padded\ on\ each\ side\ with\ a\ single\ space.')|call delete('/Users/robbie/.vim/	To\ change\ one\ of\ these\ items,\ see:')|call delete('/Users/robbie/.vim/	\ \ AlignCtrl......|alignctrl|')|call delete('/Users/robbie/.vim/	\ \ AlignStyle.....|alignctrl--|\ |alignctrl-+|\ |alignctrl-:||alignctrl-c|')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/<')|call delete('/Users/robbie/.vim/	except\ for\ the\ "g"\ and\ "v"\ patterns,\ into\ a\ variable.\ \ The')|call delete('/Users/robbie/.vim/	can\ feed\ any\ non-supported\ "option"\ to\ AlignCtrl()\ to\ prevent\ this,')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/<')|call delete('/Users/robbie/.vim/ALIGNMENT						*align-align*\ {{{2')|call delete('/Users/robbie/.vim/	Once\ the\ alignment\ control\ has\ been\ determined,\ the\ user\ specifies\ a')|call delete('/Users/robbie/.vim/	Alignment\ is\ often\ done\ on\ a\ line-range\ basis,\ but\ one\ may\ also')|call delete('/Users/robbie/.vim/	mode,\ one\ types\ the\ colon\ (:)\ and\ then\ "Align".\ \ One\ may,\ of\ course,')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/<')|call delete('/Users/robbie/.vim/	list\ of\ separators\ is\ the\ same\ as\ the\ AlignCtrl\ capability.\ \ There\ is')|call delete('/Users/robbie/.vim/	to\ specify\ that\ list.')|call delete('/Users/robbie/.vim/	An\ alternative\ form\ of\ the\ Align\ command\ can\ handle\ both\ alignment')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/<')|call delete('/Users/robbie/.vim/	application\ of\ Align\ (it\ uses\ |alignctrl-m|).\ \ The\ "g\ pattern"\ and')|call delete('/Users/robbie/.vim/	are\ also\ available\ via\ this\ form\ of\ the\ Align\ command.')|call delete('/Users/robbie/.vim/	Align\ makes\ two\ passes\ over\ the\ text\ to\ be\ aligned.\ \ The\ first\ pass')|call delete('/Users/robbie/.vim/	of\ each\ field\;\ these\ sizes\ are\ then\ stored\ in\ a\ vector.\ \ The\ second')|call delete('/Users/robbie/.vim/	length\ up\ to\ the\ maximum\ size\ of\ the\ field.\ \ Then\ the\ separator\ and')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/		\ During\ pass\ 1')|call delete('/Users/robbie/.vim/		\ ||\ Determine\ current\ separator')|call delete('/Users/robbie/.vim/		\ ||\ Determine\ length\ of\ field\ and\ save\ if\ largest\ thus\ far')|call delete('/Users/robbie/.vim/		\ During\ pass\ 2')|call delete('/Users/robbie/.vim/		\ ||\ Determine\ current\ separator')|call delete('/Users/robbie/.vim/		\ ||\ Prepend/append\ padding\ as\ specified\ by\ AlignCtrl')|call delete('/Users/robbie/.vim/		\ ||\ Append\ separator\ with\ AlignCtrl-specified\ separator\ padding')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/	for\ alignment,\ either\ by\ requiring\ that\ the\ g-pattern\ be\ present\ or')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/==============================================================================')|call delete('/Users/robbie/.vim/	its\ <ttalign.vim>\ file,\ the\ maps\ either\ have\ a\ leading\ "t"\ (for')|call delete('/Users/robbie/.vim/	backwards\ compatibility.')|call delete('/Users/robbie/.vim/	The\ maps\ are\ shown\ below\ with\ a\ leading\ backslash\ (/).\ \ Actually,\ the')|call delete('/Users/robbie/.vim/	kick-off\ character\ is\ easily\ customized.')|call delete('/Users/robbie/.vim/	Furthermore,\ all\ AlignMapsPlugin.vim\ maps\ use\ the\ <Plug>\ construct\ (see')|call delete('/Users/robbie/.vim/	mapping\ entirely,\ one\ may\ do\ that,\ too.\ \ As\ an\ example:\ >')|call delete('/Users/robbie/.vim/<	would\ have\ /ACOM\ do\ what\ /acom\ previously\ did\ (assuming\ that\ the')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/	\ \ \ \ \ \ \ \ \ \ declarations\ prior\ to\ /adec			|alignmap-a,|')|call delete('/Users/robbie/.vim/	\ \ /a?\ \ \ :\ aligns\ (...)?\ ...:...\ expressions\ on\ ?\ and\ :	|alignmap-a?|')|call delete('/Users/robbie/.vim/	\ \ /a=\ \ \ :\ aligns\ :=\ assignments\ \ \ 			|alignmap-a=|')|call delete('/Users/robbie/.vim/	\ \ /acom\ :\ useful\ for\ aligning\ comments			|alignmap-acom|')|call delete('/Users/robbie/.vim/	\ \ /anum\ :\ useful\ for\ aligning\ numbers\ 			|alignmap-anum|')|call delete('/Users/robbie/.vim/		\ \ \ \ See\ http://mysite.verizon.net/astronaut/vim/index.html\#VIS')|call delete('/Users/robbie/.vim/	\ \ /aunum:\ align\ a\ USA-style\ number			|alignmap-anum|')|call delete('/Users/robbie/.vim/	\ \ /adef\ :\ useful\ for\ aligning\ definitions		|alignmap-adef|')|call delete('/Users/robbie/.vim/	\ \ \ \ \ \ \ \ \ \ argument\ lists				|alignmap-afnc|')|call delete('/Users/robbie/.vim/	\ \ \ \ \ \ \ \ \ \ containing\ lines\ only,\ but\ also\ only\ for')|call delete('/Users/robbie/.vim/		\ \ Good\ for\ certain\ declaration\ styles.')|call delete('/Users/robbie/.vim/	\ \ \ \ \ \ \ \ \ \ containing\ lines\ only')|call delete('/Users/robbie/.vim/	\ \ \ \ \ \ \ \ \ \ (converts\ to\ spaces)')|call delete('/Users/robbie/.vim/	\ \ \ \ \ \ \ \ \ \ used\ to\ continue\ lines\ (shell\ programming,\ etc)')|call delete('/Users/robbie/.vim/	\ \ \ \ \ \ \ \ \ \ (left\ justified)')|call delete('/Users/robbie/.vim/	\ \ \ \ \ \ \ \ \ \ the\ commas\ to\ their\ left')|call delete('/Users/robbie/.vim/	\ \ \ \ \ \ \ \ \ \ the\ colons\ to\ their\ left')|call delete('/Users/robbie/.vim/	\ \ \ \ \ \ \ \ \ \ the\ less-than\ signs\ to\ their\ left')|call delete('/Users/robbie/.vim/	\ \ \ \ \ \ \ \ \ \ the\ equals\ signs\ to\ their\ left')|call delete('/Users/robbie/.vim/	\ \ \ \ \ \ \ \ \ \ (right\ justified)')|call delete('/Users/robbie/.vim/	\ \ \ \ \ \ \ \ \ \ (left\ justified)\ --\ "strings"\ are\ not\ split\ up')|call delete('/Users/robbie/.vim/	\ \ /Htd\ \ :\ tabularizes\ html\ tables:			|alignmap-Htd|')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/		\ \ *alignmap-t\;*\ *alignmap-t<*\ *alignmap-t?*\ *alignmap-t~*')|call delete('/Users/robbie/.vim/	\ \ /tx\ \ \ :\ make\ a\ left-justified\ \ alignment\ on')|call delete('/Users/robbie/.vim/	\ \ /Tx\ \ \ :\ make\ a\ right-justified\ alignment\ on')|call delete('/Users/robbie/.vim/	\ \ /m=\ \ \ :\ like\ /t=\ but\ aligns\ with\ \%...\ style\ comments')|call delete('/Users/robbie/.vim/	The\ leading\ backslash\ is\ actually\ <leader>\ (see\ |mapleader|\ for\ how\ to')|call delete('/Users/robbie/.vim/	<Align.vim>\ package\ and\ are\ defined\ in\ the\ <AlignMaps.vim>\ file.')|call delete('/Users/robbie/.vim/	option\ which\ pushes\ the\ options\ (AlignPush).\ \ The\ associated\ Align')|call delete('/Users/robbie/.vim/	back.')|call delete('/Users/robbie/.vim/	ALIGNMENT\ MAP\ USE\ WITH\ MARK\ AND\ MOVE~')|call delete('/Users/robbie/.vim/	first\ line,\ move\ to\ the\ last\ line,\ then\ execute\ the\ map.')|call delete('/Users/robbie/.vim/	ALIGNMENT\ MAP\ USE\ WITH\ VISUAL\ MODE~')|call delete('/Users/robbie/.vim/	command.')|call delete('/Users/robbie/.vim/	ALIGNMENT\ MAP\ USE\ WITH\ MENUS~')|call delete('/Users/robbie/.vim/	the\ visual\ mode\ style\ (use\ the\ V\ visual\ mode,\ move,\ then\ select')|call delete('/Users/robbie/.vim/	items\ are\ under\ DrChip.AlignMaps\ .')|call delete('/Users/robbie/.vim/	One\ may\ even\ change\ the\ top\ level\ menu\ name\ to\ whatever\ is\ wished\;\ by')|call delete('/Users/robbie/.vim/		let\ g:DrChipTopLvlMenu=\ "DrChip."')|call delete('/Users/robbie/.vim/	will\ be\ produced.\ \ Of\ course,\ one\ must\ have\ a\ vim\ with\ +menu,\ the\ gui')|call delete('/Users/robbie/.vim/	must\ be\ included).')|call delete('/Users/robbie/.vim/	COMPLEX\ ALIGNMENT\ MAP\ METHOD~')|call delete('/Users/robbie/.vim/	For\ those\ complex\ alignment\ maps\ which\ do\ alignment\ on\ constructs')|call delete('/Users/robbie/.vim/	"@"\ symbols\ in\ appropriate\ locations.\ \ Align\#Align()\ is\ then\ used\ to')|call delete('/Users/robbie/.vim/	substitutes\ to\ do\ clean-up.\ \ However,\ the\ maps\ /WS\ and\ /WE,\ used\ by')|call delete('/Users/robbie/.vim/	symbols\ by\ first\ converting\ them\ to\ <DEL>\ characters,\ doing\ the')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/	\ \ \ \ /WE\ \ calls\ AlignMaps\#WrapperEnd()')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/	Alignment\ Map\ Examples:\ /a,			*alignmap-a,*\ {{{3')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/		int\ a,b,c\;')|call delete('/Users/robbie/.vim/<')|call delete('/Users/robbie/.vim/		int\ a\;')|call delete('/Users/robbie/.vim/		int\ c\;')|call delete('/Users/robbie/.vim/		struct\ ABC_str\ def\;')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/	Alignment\ Map\ Examples:\ /a?			*alignmap-a?*\ {{{3')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/		printf("<\%s>/n",')|call delete('/Users/robbie/.vim/		\ \ (x\ ==\ DEFG)?\ "defg"\ :')|call delete('/Users/robbie/.vim/<')|call delete('/Users/robbie/.vim/		printf("<\%s>/n",')|call delete('/Users/robbie/.vim/		\ \ (x\ ==\ DEFG)?\ \ "defg"\ \ :')|call delete('/Users/robbie/.vim/<')|call delete('/Users/robbie/.vim/	---------------------------')|call delete('/Users/robbie/.vim/	---------------------------')|call delete('/Users/robbie/.vim/	Original:\ illustrating\ aligning\ of\ <<\ and\ >>\ >')|call delete('/Users/robbie/.vim/		cin\ \ \ \ \ \ <<\ y\;')|call delete('/Users/robbie/.vim/		cout\ <<\ "but\ y="\ <<\ y\ <<\ "is\ not"\;')|call delete('/Users/robbie/.vim/	Becomes:\ \ select\ "(x\ ==\ ..."\ lines,\ then\ /a<\ >')|call delete('/Users/robbie/.vim/		cin\ \ <<\ y\;')|call delete('/Users/robbie/.vim/		cout\ <<\ "but\ y="\ \ \ \ \ <<\ y\ \ <<\ "is\ not"\;')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/	Alignment\ Map\ Examples:\ /a=			*alignmap-a=*\ {{{3')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/		aa:=bb:=cc:=1\;')|call delete('/Users/robbie/.vim/		aaa:=bbb:=ccc:=1\;')|call delete('/Users/robbie/.vim/	Bcomes:\ select\ the\ three\ assignment\ lines,\ then\ /a:=\ >')|call delete('/Users/robbie/.vim/		a\ \ \ :=\ b\ \ \ :=\ c\ \ \ :=\ 1\;')|call delete('/Users/robbie/.vim/<')|call delete('/Users/robbie/.vim/	---------------------------')|call delete('/Users/robbie/.vim/	---------------------------')|call delete('/Users/robbie/.vim/	Original:\ illustrates\ how\ to\ comment-box\ some\ text\ >')|call delete('/Users/robbie/.vim/		which\ will')|call delete('/Users/robbie/.vim/		comment\ box.')|call delete('/Users/robbie/.vim/	Becomes:\ \ Select\ "This..box."\ with\ ctrl-v,\ press\ /abox\ >')|call delete('/Users/robbie/.vim/		\ *\ This\ is\ some\ plain\ text\ *')|call delete('/Users/robbie/.vim/		\ *\ soon\ be\ surrounded\ by\ a\ *')|call delete('/Users/robbie/.vim/		\ ***************************/')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/	Alignment\ Map\ Examples:\ /acom			*alignmap-acom*\ {{{3')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/		if(itworks)\ {\ /*\ this\ */')|call delete('/Users/robbie/.vim/			}\ /*\ set\ of\ three\ comments\ */')|call delete('/Users/robbie/.vim/	Becomes:\ Select\ the\ three\ lines,\ press\ /acom\ >')|call delete('/Users/robbie/.vim/	\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ then=\ dothis\;\ /*\ is\ a\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ */')|call delete('/Users/robbie/.vim/<')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/	---------------------------')|call delete('/Users/robbie/.vim/	---------------------------')|call delete('/Users/robbie/.vim/	Original:\ illustrates\ how\ to\ get\ numbers\ lined\ up\ >')|call delete('/Users/robbie/.vim/		\ 1.234\ 5.678\ 9.01e-4')|call delete('/Users/robbie/.vim/		\ 123.4\ 567.8\ 901.e-4')|call delete('/Users/robbie/.vim/	Becomes:\ Go\ to\ first\ line,\ ma.\ \ Go\ to\ last\ line,\ press\ /anum\ >')|call delete('/Users/robbie/.vim/		\ \ \ 1.234\ \ \ 5.678\ \ \ \ 9.01e-4')|call delete('/Users/robbie/.vim/		\ 123.4\ \ \ 567.8\ \ \ \ 901.e-4')|call delete('/Users/robbie/.vim/	Original:\ >')|call delete('/Users/robbie/.vim/		\ |\ 1.234\ 5.678\ 9.01e-4\ \ \ |')|call delete('/Users/robbie/.vim/		\ |\ 123.4\ 567.8\ 901.e-4\ \ \ |')|call delete('/Users/robbie/.vim/	Becomes:\ Select\ the\ numbers\ with\ ctrl-v\ (visual-block\ mode),\ >')|call delete('/Users/robbie/.vim/	\ \ \ \ \ \ \ \ \ |\ \ -1.234\ \ \ \ .5678\ \ \ -.901e-4\ |')|call delete('/Users/robbie/.vim/	\ \ \ \ \ \ \ \ \ |\ \ 12.34\ \ \ 56.78\ \ \ \ 90.1e-4\ \ \ |')|call delete('/Users/robbie/.vim/<')|call delete('/Users/robbie/.vim/		\ -1,234\ ,5678\ -,901e-4')|call delete('/Users/robbie/.vim/		\ 12,34\ 56,78\ 90,1e-4')|call delete('/Users/robbie/.vim/<')|call delete('/Users/robbie/.vim/		\ \ -1,234\ \ \ \ ,5678\ \ \ -,901e-4')|call delete('/Users/robbie/.vim/		\ \ 12,34\ \ \ 56,78\ \ \ \ 90,1e-4')|call delete('/Users/robbie/.vim/<')|call delete('/Users/robbie/.vim/	\ \ /aenum\ is\ provided\ to\ support\ European-style\ numbers')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/	\ \ let\ g:alignmaps_euronumber=\ 1')|call delete('/Users/robbie/.vim/	\ \ let\ g:alignmaps_usanumber=\ 1')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/	---------------------------')|call delete('/Users/robbie/.vim/	---------------------------')|call delete('/Users/robbie/.vim/	Original:\ >')|call delete('/Users/robbie/.vim/		int\ x\;\ /*\ this\ is\ a\ comment\ */')|call delete('/Users/robbie/.vim/<')|call delete('/Users/robbie/.vim/	\ \ \ \ \ \ \ \ /*\ A\ Title\ */')|call delete('/Users/robbie/.vim/	\ \ \ \ \ \ \ \ int\ yzw\;\ /*\ this\ is\ another\ comment\ */')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/	Alignment\ Map\ Examples:\ /adec			*alignmap-adec*\ {{{3')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/		int\ \ \ \ \ a\;')|call delete('/Users/robbie/.vim/		double\ *c=NULL\;')|call delete('/Users/robbie/.vim/		struct\ \ abc_str\ abc\;')|call delete('/Users/robbie/.vim/		int\ \ \ \ \ a\;\ \ \ \ \ \ \ \ \ \ \ \ \ \ /*\ a\ \ \ */')|call delete('/Users/robbie/.vim/		double\ *c=NULL\;\ \ \ \ \ \ \ \ \ \ \ \ \ \ /*\ b\ \ \ */')|call delete('/Users/robbie/.vim/		struct\ \ abc_str\ abc\;\ \ \ \ /*\ abc\ */')|call delete('/Users/robbie/.vim/		static\ \ \ int\ \ \ \ \ a\;\ \ \ \ \ \ \ \ \ \ \ \ \ \ /*\ a\ \ \ */')|call delete('/Users/robbie/.vim/		static\ \ \ double\ *c=NULL\;\ \ \ \ \ \ \ \ \ \ \ \ \ \ /*\ b\ \ \ */')|call delete('/Users/robbie/.vim/		static\ \ \ struct\ \ abc_str\ abc\;\ \ \ \ /*\ abc\ */')|call delete('/Users/robbie/.vim/<')|call delete('/Users/robbie/.vim/		int\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ a\;')|call delete('/Users/robbie/.vim/		double\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *c\ \ \ \ =\ NULL\;')|call delete('/Users/robbie/.vim/		struct\ abc_str\ \ \ \ \ \ \ \ \ abc\;')|call delete('/Users/robbie/.vim/		int\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ a\;\ \ \ \ \ \ \ \ \ \ \ /*\ a\ \ \ \ */')|call delete('/Users/robbie/.vim/		double\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *c\ \ \ \ =\ NULL\;\ /*\ b\ \ \ \ */')|call delete('/Users/robbie/.vim/		struct\ abc_str\ \ \ \ \ \ \ \ \ abc\;\ \ \ \ \ \ \ \ \ /*\ abc\ \ */')|call delete('/Users/robbie/.vim/		static\ int\ \ \ \ \ \ \ \ \ \ \ \ \ a\;\ \ \ \ \ \ \ \ \ \ \ /*\ a\ \ \ \ */')|call delete('/Users/robbie/.vim/		static\ double\ \ \ \ \ \ \ \ \ *c\ \ \ \ =\ NULL\;\ /*\ b\ \ \ \ */')|call delete('/Users/robbie/.vim/		static\ struct\ abc_str\ \ abc\;\ \ \ \ \ \ \ \ \ /*\ abc\ \ */')|call delete('/Users/robbie/.vim/<')|call delete('/Users/robbie/.vim/	---------------------------')|call delete('/Users/robbie/.vim/	---------------------------')|call delete('/Users/robbie/.vim/	Original:\ illustrates\ how\ to\ line\ up\ \#def'initions\ >')|call delete('/Users/robbie/.vim/		\#define\ TWO\ 22')|call delete('/Users/robbie/.vim/		\#define\ FOUR\ 4444')|call delete('/Users/robbie/.vim/	Becomes:\ Select\ four\ definition\ lines,\ apply\ /adef\ >')|call delete('/Users/robbie/.vim/	\#	\ define\ TWO\ \ \ 22')|call delete('/Users/robbie/.vim/	\#	\ define\ FOUR\ \ 4444')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/	Alignment\ Map\ Examples:\ /afnc			*alignmap-afnc*\ {{{3')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/	It\ uses\ "]]"\ to\ find\ the\ function\ body's\ leading\ "{".')|call delete('/Users/robbie/.vim/	the\ entire\ function\ declaration\ should\ be\ processed.')|call delete('/Users/robbie/.vim/	Because\ "]]"\ looks\ for\ that\ "{"\ in\ the\ first\ column,\ the')|call delete('/Users/robbie/.vim/	too.')|call delete('/Users/robbie/.vim/	Original:\ illustrates\ lining\ up\ ansi-c\ style\ function\ definitions\ >')|call delete('/Users/robbie/.vim/	\ \ struct\ abc_str\ ***a,\ /*\ one\ */')|call delete('/Users/robbie/.vim/	\ \ int\ c)\ /*\ three\ */')|call delete('/Users/robbie/.vim/	}')|call delete('/Users/robbie/.vim/	Becomes:\ put\ cursor\ anywhere\ before\ the\ '{',\ press\ /afnc\ >')|call delete('/Users/robbie/.vim/	\ \ struct\ abc_str\ ***a,	/*\ one\ \ \ */')|call delete('/Users/robbie/.vim/	\ \ int\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ c)	/*\ three\ */')|call delete('/Users/robbie/.vim/	}')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/	Alignment\ Map\ Examples:\ /adcom			*alignmap-adcom*\ {{{3')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/		lines\ (optionally\ after\ some\ whitespace).\ >')|call delete('/Users/robbie/.vim/			/*\ this\ is\ a\ test\ */')|call delete('/Users/robbie/.vim/			double\ y\;\ /*\ to\ use\ adcom\ */')|call delete('/Users/robbie/.vim/<')|call delete('/Users/robbie/.vim/		then\ press\ /adcom.\ \ The\ comment-only')|call delete('/Users/robbie/.vim/		get\ aligned.\ >')|call delete('/Users/robbie/.vim/\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ /*\ this\ is\ a\ test\ */')|call delete('/Users/robbie/.vim/\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ double\ y\;\ /*\ to\ use\ adcom\ */')|call delete('/Users/robbie/.vim/<')|call delete('/Users/robbie/.vim/	---------------------------')|call delete('/Users/robbie/.vim/	---------------------------')|call delete('/Users/robbie/.vim/	Original:\ illustrates\ how\ to\ align\ C-style\ comments\ (works\ for\ //,\ too)')|call delete('/Users/robbie/.vim/		\ \ comments.\ \ See\ the\ difference\ from\ /acom\ (|alignmap-acom|).\ >')|call delete('/Users/robbie/.vim/			then=\ dothis\;')|call delete('/Users/robbie/.vim/<')|call delete('/Users/robbie/.vim/\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if(itworks)\ {\ /*\ this\ comment\ \ \ \ \ \ \ \ \ \ \ \ \ \ */')|call delete('/Users/robbie/.vim/\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\ \ \ \ \ /*\ only\ appears\ on\ two\ lines\ */')|call delete('/Users/robbie/.vim/	Also\ see\ |alignmap-acom|')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/	Alignment\ Map\ Examples:\ /tsp			*alignmap-tsp*\ {{{3')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/	characters\ are\ ignored\ surrounding\ field\ separators.\ \ The\ /tsp\ and')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/	\ one\ two\ three\ four\ five')|call delete('/Users/robbie/.vim/	\ eleven\ twelve\ thirteen\ fourteen\ fifteen')|call delete('/Users/robbie/.vim/	Becomes:\ Select\ the\ lines,\ /tsp\ >')|call delete('/Users/robbie/.vim/	\ six\ \ \ \ seven\ \ eight\ \ \ \ nine\ \ \ \ \ ten')|call delete('/Users/robbie/.vim/<')|call delete('/Users/robbie/.vim/	\ \ \ \ one\ \ \ \ two\ \ \ \ three\ \ \ \ \ four\ \ \ \ five')|call delete('/Users/robbie/.vim/	\ eleven\ twelve\ thirteen\ fourteen\ fifteen')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/	Alignment\ Map\ Examples:\ /tsq			*alignmap-tsq*\ {{{3')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/	but\ sometimes\ one\ wants\ double-quoted\ strings\ to\ act\ as\ a\ single')|call delete('/Users/robbie/.vim/	to\ support\ this.\ (thanks\ to\ Leif\ Wickland)')|call delete('/Users/robbie/.vim/	Original:\ >')|call delete('/Users/robbie/.vim/	\ four\ "five\ six"')|call delete('/Users/robbie/.vim/	Becomes:\ Select\ the\ lines,\ /tsq\ >')|call delete('/Users/robbie/.vim/	\ four\ \ \ \ \ \ "five\ six"')|call delete('/Users/robbie/.vim/')|call delete('/Users/robbie/.vim/	Alignment\ Map\ Examples:\ /tt			*alignmap-tt*\ {{{3')|call delete('/Users/robbie/.vim/')
Align.vba: call delete('/Users/robbie/.vim/plugin/AlignPlugin.vim')|call delete('/Users/robbie/.vim/plugin/AlignMapsPlugin.vim')|call delete('/Users/robbie/.vim/plugin/cecutil.vim')|call delete('/Users/robbie/.vim/doc/Align.txt')|call delete('/Users/robbie/.vim/autoload/Align.vim')|call delete('/Users/robbie/.vim/autoload/AlignMaps.vim')
manpageview.vba: call delete('/Users/robbie/.vim/plugin/manpageviewPlugin.vim')|call delete('/Users/robbie/.vim/autoload/manpageview.vim')|call delete('/Users/robbie/.vim/syntax/man.vim')|call delete('/Users/robbie/.vim/syntax/mankey.vim')|call delete('/Users/robbie/.vim/syntax/info.vim')|call delete('/Users/robbie/.vim/syntax/manphp.vim')|call delete('/Users/robbie/.vim/doc/manpageview.txt')
CheckAttach.vba: call delete('/Users/robbie/.vim/doc/CheckAttach.txt')|call delete('/Users/robbie/.vim/plugin/CheckAttach.vim')
netrw.vba: call delete('/Users/robbie/.vim/plugin/netrwPlugin.vim')|call delete('/Users/robbie/.vim/autoload/netrw.vim')|call delete('/Users/robbie/.vim/autoload/netrwFileHandlers.vim')|call delete('/Users/robbie/.vim/autoload/netrwSettings.vim')|call delete('/Users/robbie/.vim/doc/pi_netrw.txt')|call delete('/Users/robbie/.vim/syntax/netrw.vim')
manpageview.vba: call delete('/Users/robbie/.vim/plugin/manpageviewPlugin.vim')|call delete('/Users/robbie/.vim/autoload/manpageview.vim')|call delete('/Users/robbie/.vim/syntax/man.vim')|call delete('/Users/robbie/.vim/syntax/mankey.vim')|call delete('/Users/robbie/.vim/syntax/info.vim')|call delete('/Users/robbie/.vim/syntax/manphp.vim')|call delete('/Users/robbie/.vim/doc/manpageview.txt')
