" Vim plugin for pasteing syntax source code to webpage
" Maintainer:	Yang Sheng <yasker@gmail.com>
" Version:		0.1
" Last Change:	2007 Mar 09

" This script based on TOhtml written by Bram Moolenarr. 
" The script convert the current selection to html using TOhtml, then get the body of html and wrap it with <blockquote class="vimblock">.
" In the end, it send the wrapped section of syntax code to clipboard for the further use.
" Thanks for the support from Yuyuan 'fishy' Wang.

" Notice: You need specify CSS for using the code generate by this script. 
" The default CSS of your schema can be generated by TOhtml, though it will only generate the elements that used by current file, you can find a file with most kinds of elements to generate the basis and modify it when you need more elements.
" After generation, just copy the section from <!-- to --> just below the <style type="text/css">, replace element name "body" with "vimblock" and save it as your CSS.

if !&cp && !exists(":Yankcode") && has("user_commands")
	command -range=% Yankcode :call Convert2vimblock(<line1>, <line2>)

	func Convert2vimblock(line1, line2)
		if a:line2 >= a:line1
			let g:html_start_line = a:line1
			let g:html_end_line = a:line2
		else
			let g:html_start_line = a:line2
			let g:html_end_line = a:line1
		endif

		let g:html_use_css=1
		let g:html_no_pre=1
		let g:html_use_xhtml=1
		runtime syntax/2html.vim

		let s:blockstartsymbol = '<blockquote class="vimblock">'
		let s:blockendsymbol = '</blockquote>'
		
		"the line following for wordpress
		exec "normal :%s/<br\\/>/<br\\ \\/>/g\<CR>"	

		exec "normal gg\e"
		let s:blockstart = search('<body>') + 1
		exec "normal G\e"
		"As long as 2html works well, needn't worry about bad s:blockend
		let s:blockend = search('</body>', 'b') - 1	
		call cursor(s:blockstart, 1)
		set paste
		exec "normal O" . s:blockstartsymbol . "\e" 
		call cursor(s:blockend + 1, 1)
		exec "normal o" . s:blockendsymbol . "\e" 
		set nopaste
		let s:blockend = s:blockend + 2
		exec "normal " . printf("%d", s:blockstart) . "GV" . printf("%d", s:blockend) . "G\"+y"

		unlet s:blockend
		unlet s:blockstart
		unlet s:blockendsymbol
		unlet s:blockstartsymbol
		"unlet g:html_use_css
		"unlet g:html_no_pre
		unlet g:html_end_line
		unlet g:html_start_line
	endfunc

endif
